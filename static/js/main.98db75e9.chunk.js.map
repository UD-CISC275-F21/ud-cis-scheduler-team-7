{"version":3,"sources":["Components/Menu.tsx","Components/AddCourseMenu.tsx","Components/EditCourse.tsx","Components/Semester.tsx","Components/Welcome.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Menu","useState","name","setName","description","setDescription","credits","setCredits","setValue","overrideCourse","i","COURSES","value","className","type","placeholder","onChange","e","target","parseInt","map","Course","enrolled","onClick","AddCourseMenu","props","trigger","Button","course","setCourses","courses","setTrigger","addCourse","EditCourse","editTmpId","editAddCourse","onSubmit","preventDefault","id","Semester","popup","setPopup","editDiagram","setEditDiagram","setEditTmpId","year","season","Table","slice","prereqs","length","prereq","includes","push","scope","align","n","copy1","splice","removeCourse","tmpCourse","filter","res","editCourse","clearSemester","curIndex","curCourse","JSON","parse","stringify","forEach","index","Welcome","show","setShow","ToastContainer","position","Toast","onClose","bg","autohide","ToastHeader","Body","App","defaultfall","defaultspring","fallsemesters","setFallSemesters","springsemesters","setSpringSemesters","clear","setClear","addSemester","fsemesters","ssemesters","removeSemester","copy","useForceUpdate","semester","Courses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98db75e9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport COURSES from \"../Assets/courses.json\";\n\n\nexport function Menu(): JSX.Element{\n    const [name,setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [credits, setCredits] = useState<number>(3);\n    const[value,setValue]=useState(0);\n    value;\n    function overrideCourse(i:number){\n        COURSES[i].name=name;\n        COURSES[i].description=description;\n        COURSES[i].credits=credits;\n        setValue(value=>value+1);\n    }\n    return(\n        <div className=\"menu\">\n            <div> \n                <h6>Override course info</h6>\n                <form>\n                    <div className=\"form-group\">\n                        <input type='text' placeholder='ID' value={name} onChange={(e)=>setName(e.target.value)}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type='text' placeholder='Name' value={description} onChange={(e)=>setDescription(e.target.value)}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <select className=\"form-control form-control-sm\" value={credits} onChange={(e)=>setCredits(parseInt(e.target.value))}>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                            <option>6</option>\n                            <option>7</option>\n                            <option>8</option>\n                            <option>9</option>\n                            <option>10</option>\n                        </select>\n                    </div>\n                </form>\n            </div>\n            <h6>Incomplete Requirements</h6>\n            <ul className=\"nav navbar-nav\">\n                {COURSES.map((Course, i) => {\n                    if(Course.enrolled==false){\n                        return <li key={i}><strong>{Course.name}</strong> {Course.description} <button className=\"btn btn-light btn-sm\" onClick={()=>overrideCourse(i)}>Override</button></li>;\n                    }\n                })}\n            </ul>\n            <hr/>\n            <h6>Complete Requirements</h6>\n            <ul className=\"nav navbar-nav\">\n                {COURSES.map((Course, i) => {\n                    if(Course.enrolled==true){\n                        return <li key={i}><strong>{Course.name}</strong> {Course.description} <button onClick={()=>overrideCourse(i)}> Override This Course</button></li>;\n                    }\n                })}\n            </ul>\n        </div>\n    );\n}","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport COURSES from \"../Assets/courses.json\";\nimport Course from \"../Interfaces/Course\";\n\nexport function AddCourseMenu(props:{trigger:boolean;courses:Course[] ; setTrigger:(arg0:boolean)=>void, setCourses:(arg0:Course[])=>void}): JSX.Element{\n    function addCourse(course:Course,i:number){\n        props.setCourses([...props.courses,course]);\n        props.setTrigger(false);\n        COURSES[i].enrolled=true;\n    }\n    return props.trigger ?\n        <div>\n            <h5>Course list</h5>\n            <ul className=\"nav navbar-nav\">\n                {COURSES.map((Course, i) => {\n                    return <li key={i}><Button className=\"btn btn-light btn-sm\" onClick={()=>addCourse(Course,i)}>+</Button> <strong>{Course.name}</strong> {Course.description} </li>;\n                })}\n            </ul>\n        </div>\n        :<div>\n        </div>;  \n}\n\n","import { Button } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport Course from \"../Interfaces/Course\";\n\ninterface IProps{\n   editTmpId:number;\n   editAddCourse: (tmpCourse: Course) => void\n}\n \nconst EditCourse:React.FC<IProps> = ({editTmpId,editAddCourse}) => {\n    const [name,setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [credits, setCredits] = useState<number>(3);\n    \n    const onSubmit = (e:React.FormEvent) =>{\n        e.preventDefault();\n        const id = editTmpId;\n    \n        editAddCourse({id,name,description,credits}) ;\n    };\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <label>Course ID</label>\n                    <input type='text' className=\"form-control\" placeholder='e.g. CISC108' value={name} onChange={(e)=>setName(e.target.value)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Name</label>\n                    <input type='text' className=\"form-control\" placeholder='e.g. Intro to Computer Science I' value={description} onChange={(e)=>setDescription(e.target.value)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Credits</label>\n                    <select className=\"form-control\" value={credits} onChange={(e)=>setCredits(parseInt(e.target.value))}>\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                        <option>4</option>\n                        <option>5</option>\n                        <option>6</option>\n                        <option>7</option>\n                        <option>8</option>\n                        <option>9</option>\n                        <option>10</option>\n                    </select>\n                </div>\n                <Button type=\"submit\" id=\"save-button\" className=\"btn btn-sm\">Save</Button>\n            </form>\n        </div>\n    );\n};\n \nexport default EditCourse;\n","import React, { useState } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport Course from \"../Interfaces/Course\";\nimport {AddCourseMenu} from \"./AddCourseMenu\";\nimport COURSES from \"../Assets/courses.json\";\nimport EditCourse from \"./EditCourse\";\n\nexport function Semester(props:{courses:Course[];year:number;season:string}): JSX.Element{\n    const [popup,setPopup]=useState(false);\n    const [courses,setCourses]=useState(props.courses);\n\n    const [editDiagram, setEditDiagram] = useState(false);\n    const [editTmpId,setEditTmpId] = useState<number>(0);\n\n    function clearSemester(){\n        let n:number;\n        for (let i=0;i<courses.length;i++){\n            n=courses[i].id;\n            COURSES[n-1].enrolled=false;\n        }\n        setCourses([]);\n    }\n    function removeCourse(course:Course){\n        const copy1:Course[]=[...courses];\n        let n:number;\n        for (let i=0;i<courses.length;i++){\n            if(course.id==courses[i].id){\n                copy1.splice(i,1);\n                n=course.id;\n                COURSES[n-1].enrolled=false;\n            }\n        }\n        setCourses(copy1);\n    }\n\n    const editCourse = (id:number) => {\n        setEditDiagram(true);\n        const tmpCourse = courses.filter((res)=>{\n            return res.id == id;\n        });\n        setEditTmpId(tmpCourse[0].id);\n    };\n  \n    \n    const editAddCourse=(tmpCourse:Course)=>{\n        let curIndex = 0;\n        const curCourse = JSON.parse(JSON.stringify(courses));\n        courses.forEach((course,index) => {\n            if (course.id == tmpCourse.id) curIndex = index;\n        });\n        curCourse[curIndex] = tmpCourse;\n        setCourses(curCourse);\n        setEditDiagram(false);\n    };\n  \n    const cancelEditDiagram = () => {\n        setEditDiagram(false);\n    };\n \n    return <div className={\"semester\"}>\n        <h5>Year {props.year}   {props.season} Semester</h5>\n        <div className=\"table-responsive-xl\">\n            <Table className=\"table table-striped table-dark\">\n                <thead>\n                    <tr>\n                        <td><strong>ID</strong></td>\n                        <td><strong>Name</strong></td>\n                        <td><strong>Credits</strong></td>\n                        <td><strong>Preq for</strong></td>\n                        <td></td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {courses.slice().map((Course,i)=> {\n                        const prereqs:string[]=[];\n                        for(let i=0;i<COURSES.length;i++){\n                            if(COURSES[i].prereq!=null){\n                                if(COURSES[i].prereq?.includes(Course.name)){\n                                    prereqs.push(COURSES[i].name);\n                                }\n                            }\n                        }\n                        return (\n                            <tr key={i}>\n                                <td scope=\"col\">{Course.name}</td>\n                                <td scope=\"col\">{Course.description}</td>\n                                <td scope=\"col\">{Course.credits}</td>\n                                <td scope=\"col\">{prereqs.map((i)=>{\n                                    return i+\"\\n\";\n                                }\n                                )}</td>\n\n                                <td scope=\"col\" align=\"center\">\n                                    <Button id=\"remove-course-button\" className=\"btn btn-sm\" onClick={()=>removeCourse(Course)}>Remove</Button>\n                                    <Button id=\"edit-course-button\" className=\"btn btn-sm\" onClick={()=>editCourse(Course.id)}>Edit</Button>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </Table>\n        </div>\n        <Button className=\"btn btn-light btn-sm\" onClick={()=>clearSemester()}>Clear courses</Button>\n        <Button className=\"btn btn-light btn-sm\" onClick={()=>setPopup(true)}>Add course</Button>\n        <div className=\"course-menu\">\n            <AddCourseMenu trigger={popup} setTrigger={setPopup} setCourses={setCourses} courses={courses}></AddCourseMenu>\n        </div>\n        {editDiagram?\n            <div className='outer-diagram'>\n                <div className='diagram'>\n                    <EditCourse editTmpId={editTmpId}  editAddCourse={editAddCourse}/>\n                    <Button id=\"cancel-button\" className='diagram-cancel btn btn-sm' onClick={cancelEditDiagram}>Cancel</Button>\n                </div>\n            </div> :\n            <div></div>\n        }\n    </div>\n    ;\n}\n","import Toast from \"react-bootstrap/Toast\";\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\nimport ToastHeader from \"react-bootstrap/ToastHeader\";\nimport React, { useState } from \"react\";\n\nexport function Welcome(): JSX.Element{\n    const [show, setShow] = useState(false);\n    return(\n        <div className=\"welcome\">\n            <ToastContainer position=\"top-end\" className=\"p-3\">\n                <Toast show={!show} onClose={()=>setShow(!show)} bg=\"light\" autohide>\n                    <ToastHeader>\n                        <strong className=\"me-auto\">Welcome!</strong>\n                    </ToastHeader>\n                    <Toast.Body> \n                        <p>This handy dandy website can help you plan out your computer science degree at UD.</p>\n                        <button type=\"button\" className=\"btn btn-dark btn-sm\">Tutorial</button>\n                    </Toast.Body>\n                </Toast>\n            </ToastContainer>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Components/Menu.css\";\nimport COURSES from \"./Assets/courses.json\";\nimport {Menu} from \"./Components/Menu\";\nimport \"./Components/Semester.css\";\nimport { Semester } from \"./Components/Semester\";\nimport \"./Components/Welcome.css\";\nimport { Welcome } from \"./Components/Welcome\";\nimport Course from \"./Interfaces/Course\";\nimport \"./App.css\";\nimport \"./Components/Semester.css\";\nimport \"./Components/Menu.css\";\nfunction App(): JSX.Element {\n    const defaultfall:Course[][]=[[COURSES[0],COURSES[14],COURSES[15],COURSES[20]],[COURSES[3],COURSES[4],COURSES[19],COURSES[34]],[COURSES[7],COURSES[8],COURSES[10],COURSES[33]],[COURSES[12],COURSES[11],COURSES[36],COURSES[38]]];\n    const defaultspring:Course[][]=[[COURSES[1],COURSES[2],COURSES[21],COURSES[40]],[COURSES[5],COURSES[9],COURSES[18],COURSES[35]],[COURSES[6],COURSES[11],COURSES[16],COURSES[41]],[COURSES[13],COURSES[43],COURSES[42],COURSES[45]]];\n    const [fallsemesters, setFallSemesters]=useState(defaultfall);\n    const [springsemesters, setSpringSemesters]=useState(defaultspring);\n    const [clear,setClear]=useState(true);\n    function useForceUpdate(){\n        const [value,setValue] = useState(0); // integer state\n        value;\n        return () => setValue(value => value + 1); // update the state to force render\n    }\n    function addSemester(fsemesters:Course[][],ssemesters:Course[][],season:boolean){\n        if(season==true){\n            setFallSemesters([...fsemesters,[]]);\n        }else{\n            setSpringSemesters([...ssemesters,[]]);\n        }\n        setClear(true);\n    }\n    function removeSemester(fsemesters:Course[][],ssemesters:Course[][],season:boolean){\n        let n:number;\n        let copy:Course[][];\n        if (season==true){\n            copy=[...fsemesters];\n            copy.splice(fsemesters.length-1,1);\n            if(fsemesters.length>0){\n                for(let i=0;i<fsemesters[fsemesters.length-1].length;i++){\n                    n=fsemesters[fsemesters.length-1][i].id;\n                    COURSES[n-1].enrolled=false;\n                }\n            }\n            if(copy.length==0 && ssemesters.length==0){\n                setClear(false);\n            }\n            setFallSemesters(copy);\n        }else{\n            copy=[...ssemesters];\n            copy.splice(ssemesters.length-1,1);\n            if(ssemesters.length>0){\n                for(let i=0;i<ssemesters[ssemesters.length-1].length;i++){\n                    n=ssemesters[ssemesters.length-1][i].id;\n                    COURSES[n-1].enrolled=false;\n                }\n            }\n            if(fsemesters.length==0 && copy.length==0){\n                setClear(false);\n            }\n            setSpringSemesters(copy);\n        }\n    }\n    function clearSemester(){\n        for(let i=0;i<COURSES.length;i++){\n            COURSES[i].enrolled=false;\n        }\n        setClear(false);\n        setFallSemesters([]);\n        setSpringSemesters([]);\n    }\n    function setDefault(){\n        defaultfall.map((semester)=>{\n            semester.map((course)=>{\n                course.enrolled=true;\n            });\n        });\n        defaultspring.map((semester)=>{\n            semester.map((course)=>{\n                course.enrolled=true;\n            });\n        });\n        setFallSemesters(defaultfall);\n        setSpringSemesters(defaultspring);\n        setClear(true);\n    }\n    return (\n        <div className=\"App\">\n            <Welcome />\n            <div className=\"container-fluid\">\n                {/* header row */}\n                <div className=\"row\">\n                    <header className=\"App-header\">\n                        <h1>UD CIS Scheduler</h1>\n                    </header>\n                </div>\n                {/* rest of page row */}\n                <div className=\"row\">\n                    {/* menu column */}\n                    <div className=\"col-2\">\n                        <h3>Course list</h3>\n                        <button className=\"btn btn-light btn-sm\" onClick={useForceUpdate()}>Update course</button>\n                        <Menu />\n                    </div>\n                    {/* rightside of page column */}\n                    <div className=\"col\">\n                        {/* rightside of page row */}\n                        <div className=\"row no-gutters\" id=\"schedule-title\">\n                            <h3>Schedule</h3>\n                            {/* fall sem column */}\n                            <div className=\"col\">\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        {clear?\n                                            <button className=\"btn btn-light btn-sm\" onClick={()=>clearSemester()}>Clear all semesters</button>:\n                                            <button className=\"btn btn-light btn-sm\" onClick={()=>setDefault()}>Set default plan</button>}\n                                    </div>\n                                </div>\n                                <button className=\"btn btn-light btn-sm\" onClick={()=>addSemester(fallsemesters,springsemesters,true)}>Add fall semester</button>\n                                <button className=\"btn btn-light btn-sm\" onClick={()=>removeSemester(fallsemesters,springsemesters,true)}>Remove last fall semester</button>\n                                {fallsemesters.map((Courses,i)=>{\n                                    return(\n                                        <Semester key = {i}\n                                            year={i+1}\n                                            season = {\"Fall\"} \n                                            courses = {Courses}\n                                        />);\n                                })}\n                            </div>\n                            {/* spring sem column */}\n                            <div className=\"col\">\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <button className=\"btn btn-light btn-sm\">Save plan</button>\n                                        <button className=\"btn btn-light btn-sm\">Load plan</button>\n                                    </div>\n                                </div>\n                                <button className=\"btn btn-light btn-sm\" onClick={()=>addSemester(fallsemesters,springsemesters,false)}>Add spring semester</button>\n                                <button className=\"btn btn-light btn-sm\" onClick={()=>removeSemester(fallsemesters,springsemesters,false)}>Remove last spring semester</button>\n                                {springsemesters.map((Courses,i)=>{\n                                    return(\n                                        <Semester key = {i}\n                                            year = {i+1}\n                                            season = {\"Spring\"} \n                                            courses = {Courses}\n                                        />);\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}