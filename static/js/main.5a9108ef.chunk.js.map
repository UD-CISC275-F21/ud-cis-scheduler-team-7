{"version":3,"sources":["Components/Menu.tsx","Components/AddCourseMenu.tsx","Components/EditCourse.tsx","Components/Semester.tsx","Components/Welcome.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Menu","useState","name","setName","description","setDescription","credits","setCredits","setValue","className","type","placeholder","value","onChange","e","target","parseInt","COURSES","map","Course","i","onClick","overrideCourse","AddCourseMenu","props","trigger","course","setCourses","courses","setTrigger","EditCourse","editTmpId","editAddCourse","onSubmit","preventDefault","id","Semester","popup","setPopup","editDiagram","setEditDiagram","setEditTmpId","year","season","slice","prereqs","length","prereq","includes","push","scope","align","Button","copy1","splice","removeCourse","tmpCourse","filter","res","editCourse","curIndex","curCourse","JSON","parse","stringify","forEach","index","Welcome","show","setShow","ToastContainer","position","Toast","onClose","bg","ToastHeader","Body","App","currentCourses","setCurrentCourses","fallsemesters","setFallSemesters","springsemesters","setSpringSemesters","useForceUpdate","fsemesters","ssemesters","fcopy","scopy","clearSemester","semesters","addFallSemester","copy","removeFallSemester","addSpringSemester","removeSpringSemester","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a9108ef.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport COURSES from \"../Assets/courses.json\";\n\n\nexport function Menu(): JSX.Element{\n    const [name,setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [credits, setCredits] = useState<number>(3);\n    const[value,setValue]=useState(0);\n    value;\n    function overrideCourse(i:number){\n        COURSES[i].name=name;\n        COURSES[i].description=description;\n        COURSES[i].credits=credits;\n        setValue(value=>value+1);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return(\n        <div className=\"menu\">\n            <h3>Course list</h3>\n            <div > Override Course info\n                <br/>\n                <form>\n                    <p><label><li>Course Name</li></label></p>\n                    <input type='text' placeholder='edit course name' value={name} onChange={(e)=>setName(e.target.value)}/>\n                    <p></p>\n                    <p><label><li>Description</li></label></p>\n                    <input type='text' placeholder='edit description' value={description} onChange={(e)=>setDescription(e.target.value)}/>\n                    <p></p>\n                    <p><label><li>Credit</li></label></p>\n                    <input type='number' placeholder='edit credit'value={credits}  onChange={(e)=>setCredits(parseInt(e.target.value))}/>\n    \n                </form>\n            </div>\n            <h6>Incomplete Requirements</h6>\n            <ul className=\"nav navbar-nav\">\n                {COURSES.map((Course, i) => {\n                    return <li key={i}><strong>{Course.name}</strong> {Course.description} <button onClick={()=>overrideCourse(i)}> Override This Course</button></li>;\n                })}\n            </ul>\n            <hr/>\n            <h6>Complete Requirements</h6>\n            <ul className=\"nav navbar-nav\">\n            </ul>\n        </div>\n    );\n}","import React from \"react\";\nimport COURSES from \"../Assets/courses.json\";\nimport Course from \"../Interfaces/Course\";\n\nexport function AddCourseMenu(props:{trigger:boolean;courses:Course[] ; setTrigger:(arg0:boolean)=>void, setCourses:(arg0:Course[])=>void}): JSX.Element{\n\n    function addCourse(course:Course){\n        props.setCourses([...props.courses,course]);\n        props.setTrigger(false);\n\n    }\n    return props.trigger ?\n        <div className=\"menu\">\n            <h3>Course list</h3>\n            <ul className=\"nav navbar-nav\">\n                {COURSES.map((Course, i) => {\n                    return <li key={i}><strong>{Course.name}</strong> {Course.description} <button onClick={()=>addCourse(Course)}>Add course</button></li>;\n                })}\n            </ul>\n        </div>\n        :<div>\n\n        </div>;\n    \n}\n\n","import React, { useState } from \"react\";\nimport Course from \"../Interfaces/Course\";\ninterface IProps{\n   editTmpId:number;\n   editAddCourse: (tmpCourse: Course) => void\n}\n \nconst EditCourse:React.FC<IProps> = ({editTmpId,editAddCourse}) => {\n    const [name,setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [credits, setCredits] = useState<number>(3);\n    \n    const onSubmit = (e:React.FormEvent) =>{\n        e.preventDefault();\n        const id = editTmpId;\n    \n        editAddCourse({id,name,description,credits}) ;\n    };\n    return (\n        <div >\n            <br/>\n            <form onSubmit={onSubmit} >\n                <p><label><li>Course Name</li></label></p>\n                <input type='text' placeholder='edit course name' value={name} onChange={(e)=>setName(e.target.value)}/>\n                <p></p>\n                <p><label><li>Description</li></label></p>\n                <input type='text' placeholder='edit description' value={description} onChange={(e)=>setDescription(e.target.value)}/>\n                <p></p>\n                <p><label><li>Credit</li></label></p>\n                <input type='number' placeholder='edit credit'value={credits}  onChange={(e)=>setCredits(parseInt(e.target.value))}/>\n    \n                <p><input type=\"submit\" className=\"btn btn-primary m-2\" value=\"Save course\"/></p>\n            </form>\n        </div>\n    );\n};\n \nexport default EditCourse;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Course from \"../Interfaces/Course\";\nimport {AddCourseMenu} from \"./AddCourseMenu\";\nimport COURSES from \"../Assets/courses.json\";\nimport EditCourse from \"./EditCourse\";\n\nexport function Semester(props:{courses:Course[];year:number;season:string;setCurrentCourses:(arg0:Course[])=>void}): JSX.Element{\n    const [popup,setPopup]=useState(false);\n    const [courses,setCourses]=useState(props.courses);\n\n    const [editDiagram, setEditDiagram] = useState(false);\n    const [editTmpId,setEditTmpId] = useState<number>(0);\n\n    function clearSemester(){\n        setCourses([]);\n    }\n    function removeCourse(course:Course){\n        const copy1:Course[]=[...courses];\n        for (let i=0;i<courses.length;i++){\n            if(course.id==courses[i].id){\n                copy1.splice(i,1);\n\n            }\n        }\n        setCourses(copy1);\n    }\n\n    const editCourse = (id:number) => {\n        setEditDiagram(true);\n        const tmpCourse = courses.filter((res)=>{\n            return res.id == id;\n        });\n        setEditTmpId(tmpCourse[0].id);\n    };\n  \n    \n    const editAddCourse=(tmpCourse:Course)=>{\n        let curIndex = 0;\n        const curCourse = JSON.parse(JSON.stringify(courses));\n        courses.forEach((course,index) => {\n            if (course.id == tmpCourse.id) curIndex = index;\n        });\n        curCourse[curIndex] = tmpCourse;\n        setCourses(curCourse);\n        setEditDiagram(false);\n    };\n  \n    const cancelEditDiagram = () => {\n        setEditDiagram(false);\n    };\n \n    return <div className={\"semester\"}>\n        <h5>Year {props.year}   {props.season} Semester</h5>\n        <table>\n            <tr>\n                <td>ID</td>\n                <td>Name</td>\n                <td>Credits</td>\n                <td>Preq for</td>\n            </tr>\n            {courses.slice().map((Course,i)=> {\n                const prereqs:string[]=[];\n                for(let i=0;i<COURSES.length;i++){\n                    if(COURSES[i].prereq!=null){\n                        if(COURSES[i].prereq?.includes(Course.name)){\n                            prereqs.push(COURSES[i].name);\n                        }\n                    }\n                }\n                return (\n                    <tr key={i}>\n                        <td scope=\"col\">{Course.name}</td>\n                        <td scope=\"col\">{Course.description}</td>\n                        <td scope=\"col\">{Course.credits}</td>\n                        <td scope=\"col\">{prereqs.map((i)=>{\n                            return i+\"\\n\";\n                        }\n                        )}</td>\n\n                        <td scope=\"col\" align=\"center\">\n                            <Button id=\"special\" className=\"btn btn-sm\" onClick={()=>removeCourse(Course)}>Remove course</Button>\n                            <Button id=\"special2\" className=\"btn btn-sm\" onClick={()=>editCourse(Course.id)}>Edit course</Button>\n                        </td>\n                    </tr>\n                );\n            })}\n        </table>\n        <Button className=\"btn btn-light btn-sm\" onClick={()=>clearSemester()}>Clear courses</Button>\n        <Button className=\"btn btn-light btn-sm\" onClick={()=>setPopup(true)}>Add course</Button>\n        <AddCourseMenu trigger={popup} setTrigger={setPopup} setCourses={setCourses} courses={courses}></AddCourseMenu>\n\n        {editDiagram?\n            <div className='outer-diagram'>\n                <div className='diagram'>\n                    <EditCourse  editTmpId={editTmpId}  editAddCourse={editAddCourse}/>\n                    <button className='diagram-cancel btn btn-primary' onClick={cancelEditDiagram}>Cancel</button>\n                </div>\n            </div> :\n            <div></div>\n        }\n\n    </div>\n    ;\n}\n","import Toast from \"react-bootstrap/Toast\";\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\nimport ToastHeader from \"react-bootstrap/ToastHeader\";\nimport React, { useState } from \"react\";\n\nexport function Welcome(): JSX.Element{\n    const [show, setShow] = useState(false);\n    return(\n        <div className=\"welcome\">\n            <ToastContainer position=\"top-end\" className=\"p-3\">\n                <Toast show={!show} onClose={()=>setShow(!show)} bg=\"light\">\n                    <ToastHeader>\n                        <strong className=\"me-auto\">Welcome!</strong>\n                    </ToastHeader>\n                    <Toast.Body> \n                        This handy dandy website can help you plan out your computer science degree at the University of Delaware.\n                    </Toast.Body>\n                    <Toast.Body> \n                        <button type=\"button\" className=\"btn btn-dark btn-sm\">Tutorial</button>\n                    </Toast.Body>\n                </Toast>\n            </ToastContainer>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Components/Menu.css\";\nimport COURSES from \"./Assets/courses.json\";\nimport {Menu} from \"./Components/Menu\";\nimport \"./Components/Semester.css\";\nimport { Semester } from \"./Components/Semester\";\nimport \"./Components/Welcome.css\";\nimport { Welcome } from \"./Components/Welcome\";\nimport Course from \"./Interfaces/Course\";\nimport \"./App.css\";\nimport \"./Components/Semester.css\";\nimport \"./Components/Menu.css\";\nfunction App(): JSX.Element {\n    const [currentCourses, setCurrentCourses] = useState([COURSES[0],COURSES[1],COURSES[2],COURSES[3]]as Course[]);\n    const [fallsemesters, setFallSemesters]=useState([1,2,3,4]);\n    const [springsemesters, setSpringSemesters]=useState([1,2,3,4]);\n    function useForceUpdate(){\n        const [value,setValue] = useState(0); // integer state\n        value;\n        return () => setValue(value => value + 1); // update the state to force render\n    }\n    function addFallSemester(semesters: number[]){\n        const i: number = semesters.length;\n        setFallSemesters([...semesters,i+1]);\n    }\n    function addSpringSemester(semesters: number[]){\n        const i: number = semesters.length;\n        setSpringSemesters([...semesters,i+1]);\n    }\n    function removeFallSemester(semesters: number[]){\n        const copy: number[] = [...semesters];\n        copy.splice(semesters.length-1,1);\n        setFallSemesters(copy);\n    }\n    function removeSpringSemester(semesters: number[]){\n        const copy: number[] = [...semesters];\n        copy.splice(semesters.length-1,1);\n        setSpringSemesters(copy);\n    }\n    function clearSemester(fsemesters: number[], ssemesters: number[]){\n        const fcopy: number[] = [...fsemesters];\n        const scopy: number[] = [...ssemesters];\n        fcopy.splice(0,fsemesters.length);\n        scopy.splice(0,ssemesters.length);\n        setFallSemesters(fcopy);\n        setSpringSemesters(scopy);\n    }\n    function setDefault(){\n        setFallSemesters([1,2,3,4]);\n        setSpringSemesters([1,2,3,4]);\n    }\n    return (\n        <div className=\"App\">\n            <Welcome />\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <header className=\"App-header\">\n                        <h1>UD CIS Scheduler <button onClick={useForceUpdate()}>Update courses</button></h1>\n                    </header>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <Menu />\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <button className=\"btn btn-light btn-sm\" onClick={()=>clearSemester(fallsemesters,springsemesters)}>Clear all semesters</button>\n                            </div>\n                        </div>\n                        <button className=\"btn btn-light btn-sm\" onClick={()=>addFallSemester(fallsemesters)}>Add fall semester</button>\n                        <button className=\"btn btn-light btn-sm\" onClick={()=>removeFallSemester(fallsemesters)}>Remove last fall semester</button>\n                        {fallsemesters.map((i)=>{\n                            return(\n                                <Semester key = {i}\n                                    year = {i}\n                                    season = {\"Fall\"} \n                                    courses = {currentCourses}\n                                    setCurrentCourses={setCurrentCourses}/>);\n                        })}\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <button className=\"btn btn-light btn-sm\" onClick={()=>setDefault()}>Set default plan</button>\n                            </div>\n                        </div>\n                        <button className=\"btn btn-light btn-sm\" onClick={()=>addSpringSemester(springsemesters)}>Add spring semester</button>\n                        <button className=\"btn btn-light btn-sm\" onClick={()=>removeSpringSemester(springsemesters)}>Remove last spring semester</button>\n                        {springsemesters.map((i)=>{\n                            return(\n                                <Semester key = {i}\n                                    year = {i}\n                                    season = {\"Spring\"} \n                                    courses = {currentCourses}\n                                    setCurrentCourses = {setCurrentCourses}/>);\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}