{"version":3,"sources":["Components/Menu.tsx","Components/AddCourseMenu.tsx","Components/EditCourse.tsx","Components/Semester.tsx","Components/Welcome.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Menu","useState","name","setName","description","setDescription","credits","setCredits","setValue","overrideCourse","i","COURSES","value","className","type","placeholder","onChange","e","target","parseInt","map","Course","enrolled","onClick","AddCourseMenu","props","trigger","course","setCourses","courses","setTrigger","addCourse","EditCourse","editTmpId","editAddCourse","onSubmit","preventDefault","id","Semester","popup","setPopup","editDiagram","setEditDiagram","setEditTmpId","year","season","slice","prereqs","length","prereq","includes","push","scope","align","Button","n","copy1","splice","removeCourse","tmpCourse","filter","res","editCourse","clearSemester","curIndex","curCourse","JSON","parse","stringify","forEach","index","Welcome","show","setShow","ToastContainer","position","Toast","onClose","bg","ToastHeader","Body","App","defaultfall","defaultspring","currentCourses","fallsemesters","setFallSemesters","springsemesters","setSpringSemesters","clear","setClear","addSemester","fsemesters","ssemesters","removeSemester","copy","useForceUpdate","fcopy","scopy","setDefault","Courses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a84579a4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport COURSES from \"../Assets/courses.json\";\n\n\nexport function Menu(): JSX.Element{\n    const [name,setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [credits, setCredits] = useState<number>(3);\n    const[value,setValue]=useState(0);\n    value;\n    function overrideCourse(i:number){\n        COURSES[i].name=name;\n        COURSES[i].description=description;\n        COURSES[i].credits=credits;\n        setValue(value=>value+1);\n    }\n    return(\n        <div className=\"menu\">\n            <h3>Course list</h3>\n            <div > Override Course info\n                <br/>\n                <form>\n                    <p><label><li>Course Name</li></label></p>\n                    <input type='text' placeholder='edit course name' value={name} onChange={(e)=>setName(e.target.value)}/>\n                    <p></p>\n                    <p><label><li>Description</li></label></p>\n                    <input type='text' placeholder='edit description' value={description} onChange={(e)=>setDescription(e.target.value)}/>\n                    <p></p>\n                    <p><label><li>Credit</li></label></p>\n                    <input type='number' placeholder='edit credit'value={credits}  onChange={(e)=>setCredits(parseInt(e.target.value))}/>\n    \n                </form>\n            </div>\n            <h6>Incomplete Requirements</h6>\n            <ul className=\"nav navbar-nav\">\n                {COURSES.map((Course, i) => {\n                    if(Course.enrolled==false){\n                        return <li key={i}><strong>{Course.name}</strong> {Course.description} <button onClick={()=>overrideCourse(i)}> Override This Course</button></li>;\n                    }\n                })}\n            </ul>\n            <hr/>\n            <h6>Complete Requirements</h6>\n            <ul className=\"nav navbar-nav\">\n                {COURSES.map((Course, i) => {\n                    if(Course.enrolled==true){\n                        return <li key={i}><strong>{Course.name}</strong> {Course.description} <button onClick={()=>overrideCourse(i)}> Override This Course</button></li>;\n                    }\n                })}\n            </ul>\n        </div>\n    );\n}","import React from \"react\";\nimport COURSES from \"../Assets/courses.json\";\nimport Course from \"../Interfaces/Course\";\n\nexport function AddCourseMenu(props:{trigger:boolean;courses:Course[] ; setTrigger:(arg0:boolean)=>void, setCourses:(arg0:Course[])=>void}): JSX.Element{\n\n    function addCourse(course:Course,i:number){\n        props.setCourses([...props.courses,course]);\n        props.setTrigger(false);\n        COURSES[i].enrolled=true;\n\n    }\n    return props.trigger ?\n        <div className=\"menu\">\n            <h3>Course list</h3>\n            <ul className=\"nav navbar-nav\">\n                {COURSES.map((Course, i) => {\n                    return <li key={i}><strong>{Course.name}</strong> {Course.description} <button onClick={()=>addCourse(Course,i)}>Add course</button></li>;\n                })}\n            </ul>\n        </div>\n        :<div>\n\n        </div>;\n    \n}\n\n","import React, { useState } from \"react\";\nimport Course from \"../Interfaces/Course\";\ninterface IProps{\n   editTmpId:number;\n   editAddCourse: (tmpCourse: Course) => void\n}\n \nconst EditCourse:React.FC<IProps> = ({editTmpId,editAddCourse}) => {\n    const [name,setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [credits, setCredits] = useState<number>(3);\n    \n    const onSubmit = (e:React.FormEvent) =>{\n        e.preventDefault();\n        const id = editTmpId;\n    \n        editAddCourse({id,name,description,credits}) ;\n    };\n    return (\n        <div >\n            <br/>\n            <form onSubmit={onSubmit} >\n                <p><label><li>Course Name</li></label></p>\n                <input type='text' placeholder='edit course name' value={name} onChange={(e)=>setName(e.target.value)}/>\n                <p></p>\n                <p><label><li>Description</li></label></p>\n                <input type='text' placeholder='edit description' value={description} onChange={(e)=>setDescription(e.target.value)}/>\n                <p></p>\n                <p><label><li>Credit</li></label></p>\n                <input type='number' placeholder='edit credit'value={credits}  onChange={(e)=>setCredits(parseInt(e.target.value))}/>\n    \n                <p><input type=\"submit\" className=\"btn btn-primary m-2\" value=\"Save course\"/></p>\n            </form>\n        </div>\n    );\n};\n \nexport default EditCourse;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Course from \"../Interfaces/Course\";\nimport {AddCourseMenu} from \"./AddCourseMenu\";\nimport COURSES from \"../Assets/courses.json\";\nimport EditCourse from \"./EditCourse\";\n\nexport function Semester(props:{courses:Course[];year:number;season:string}): JSX.Element{\n    const [popup,setPopup]=useState(false);\n    const [courses,setCourses]=useState(props.courses);\n\n    const [editDiagram, setEditDiagram] = useState(false);\n    const [editTmpId,setEditTmpId] = useState<number>(0);\n\n    function clearSemester(){\n        let n:number;\n        for (let i=0;i<courses.length;i++){\n            n=courses[i].id;\n            COURSES[n-1].enrolled=false;\n        }\n        setCourses([]);\n    }\n    function removeCourse(course:Course){\n        const copy1:Course[]=[...courses];\n        let n:number;\n        for (let i=0;i<courses.length;i++){\n            if(course.id==courses[i].id){\n                copy1.splice(i,1);\n                n=course.id;\n                COURSES[n-1].enrolled=false;\n            }\n        }\n        setCourses(copy1);\n    }\n\n    const editCourse = (id:number) => {\n        setEditDiagram(true);\n        const tmpCourse = courses.filter((res)=>{\n            return res.id == id;\n        });\n        setEditTmpId(tmpCourse[0].id);\n    };\n  \n    \n    const editAddCourse=(tmpCourse:Course)=>{\n        let curIndex = 0;\n        const curCourse = JSON.parse(JSON.stringify(courses));\n        courses.forEach((course,index) => {\n            if (course.id == tmpCourse.id) curIndex = index;\n        });\n        curCourse[curIndex] = tmpCourse;\n        setCourses(curCourse);\n        setEditDiagram(false);\n    };\n  \n    const cancelEditDiagram = () => {\n        setEditDiagram(false);\n    };\n \n    return <div className={\"semester\"}>\n        <h5>Year {props.year}   {props.season} Semester</h5>\n        <table>\n            <tr>\n                <td>ID</td>\n                <td>Name</td>\n                <td>Credits</td>\n                <td>Preq for</td>\n            </tr>\n            {courses.slice().map((Course,i)=> {\n                const prereqs:string[]=[];\n                for(let i=0;i<COURSES.length;i++){\n                    if(COURSES[i].prereq!=null){\n                        if(COURSES[i].prereq?.includes(Course.name)){\n                            prereqs.push(COURSES[i].name);\n                        }\n                    }\n                }\n                return (\n                    <tr key={i}>\n                        <td scope=\"col\">{Course.name}</td>\n                        <td scope=\"col\">{Course.description}</td>\n                        <td scope=\"col\">{Course.credits}</td>\n                        <td scope=\"col\">{prereqs.map((i)=>{\n                            return i+\"\\n\";\n                        }\n                        )}</td>\n\n                        <td scope=\"col\" align=\"center\">\n                            <Button id=\"special\" className=\"btn btn-sm\" onClick={()=>removeCourse(Course)}>Remove course</Button>\n                            <Button id=\"special2\" className=\"btn btn-sm\" onClick={()=>editCourse(Course.id)}>Edit course</Button>\n                        </td>\n                    </tr>\n                );\n            })}\n        </table>\n        <Button className=\"btn btn-light btn-sm\" onClick={()=>clearSemester()}>Clear courses</Button>\n        <Button className=\"btn btn-light btn-sm\" onClick={()=>setPopup(true)}>Add course</Button>\n        <AddCourseMenu trigger={popup} setTrigger={setPopup} setCourses={setCourses} courses={courses}></AddCourseMenu>\n\n        {editDiagram?\n            <div className='outer-diagram'>\n                <div className='diagram'>\n                    <EditCourse  editTmpId={editTmpId}  editAddCourse={editAddCourse}/>\n                    <button className='diagram-cancel btn btn-primary' onClick={cancelEditDiagram}>Cancel</button>\n                </div>\n            </div> :\n            <div></div>\n        }\n\n    </div>\n    ;\n}\n","import Toast from \"react-bootstrap/Toast\";\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\nimport ToastHeader from \"react-bootstrap/ToastHeader\";\nimport React, { useState } from \"react\";\n\nexport function Welcome(): JSX.Element{\n    const [show, setShow] = useState(false);\n    return(\n        <div className=\"welcome\">\n            <ToastContainer position=\"top-end\" className=\"p-3\">\n                <Toast show={!show} onClose={()=>setShow(!show)} bg=\"light\">\n                    <ToastHeader>\n                        <strong className=\"me-auto\">Welcome!</strong>\n                    </ToastHeader>\n                    <Toast.Body> \n                        This handy dandy website can help you plan out your computer science degree at the University of Delaware.\n                    </Toast.Body>\n                    <Toast.Body> \n                        <button type=\"button\" className=\"btn btn-dark btn-sm\">Tutorial</button>\n                    </Toast.Body>\n                </Toast>\n            </ToastContainer>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Components/Menu.css\";\nimport COURSES from \"./Assets/courses.json\";\nimport {Menu} from \"./Components/Menu\";\nimport \"./Components/Semester.css\";\nimport { Semester } from \"./Components/Semester\";\nimport \"./Components/Welcome.css\";\nimport { Welcome } from \"./Components/Welcome\";\nimport Course from \"./Interfaces/Course\";\nimport \"./App.css\";\nimport \"./Components/Semester.css\";\nimport \"./Components/Menu.css\";\nfunction App(): JSX.Element {\n    const defaultfall:Course[]=[COURSES[0],COURSES[1],COURSES[2],COURSES[3]];\n    const defaultspring:Course[]=[COURSES[0],COURSES[1],COURSES[2],COURSES[3]];\n    const currentCourses = [COURSES[0],COURSES[1],COURSES[2],COURSES[3]]as Course[];\n    const [fallsemesters, setFallSemesters]=useState([currentCourses,currentCourses,currentCourses,currentCourses]);\n    const [springsemesters, setSpringSemesters]=useState([currentCourses,currentCourses,currentCourses,currentCourses]);\n    const [clear,setClear]=useState(true);\n    function useForceUpdate(){\n        const [value,setValue] = useState(0); // integer state\n        value;\n        return () => setValue(value => value + 1); // update the state to force render\n    }\n    function addSemester(fsemesters:Course[][],ssemesters:Course[][],season:boolean){\n        if(season==true){\n            setFallSemesters([...fsemesters,[]]);\n        }else{\n            setSpringSemesters([...ssemesters,[]]);\n        }\n        setClear(true);\n    }\n    function removeSemester(fsemesters:Course[][],ssemesters:Course[][],season:boolean){\n        let n:number;\n        let copy:Course[][];\n        if (season==true){\n            copy=[...fsemesters];\n            copy.splice(fsemesters.length-1,1);\n            if(fsemesters.length>0){\n                for(let i=0;i<fsemesters[fsemesters.length-1].length;i++){\n                    n=fsemesters[fsemesters.length-1][i].id;\n                    COURSES[n-1].enrolled=false;\n                }\n            }\n            if(copy.length==0 && ssemesters.length==0){\n                setClear(false);\n            }\n            setFallSemesters(copy);\n        }else{\n            copy=[...ssemesters];\n            copy.splice(ssemesters.length-1,1);\n            if(ssemesters.length>0){\n                for(let i=0;i<ssemesters[ssemesters.length-1].length;i++){\n                    n=ssemesters[ssemesters.length-1][i].id;\n                    COURSES[n-1].enrolled=false;\n                }\n            }\n            if(fsemesters.length==0 && copy.length==0){\n                setClear(false);\n            }\n            setSpringSemesters(copy);\n        }\n    }\n    function clearSemester(fsemesters: Course[][], ssemesters: Course[][]){\n        const fcopy: Course[][] = [...fsemesters];\n        const scopy: Course[][] = [...ssemesters];\n        fcopy.splice(0,fsemesters.length);\n        scopy.splice(0,ssemesters.length);\n        for(let i=0;i<COURSES.length;i++){\n            COURSES[i].enrolled=false;\n        }\n        setClear(false);\n        setFallSemesters(fcopy);\n        setSpringSemesters(scopy);\n    }\n    function setDefault(fsemesters:Course[][],ssemesters:Course[][]){\n        const fcopy: Course[][] = [...fsemesters];\n        const scopy: Course[][] = [...ssemesters];\n        fcopy.splice(0,fsemesters.length);\n        scopy.splice(0,ssemesters.length);\n        setFallSemesters([defaultfall,defaultfall,defaultfall,defaultfall]);\n        setSpringSemesters([defaultspring,defaultspring,defaultspring,defaultspring]);\n        setClear(true);\n    }\n    return (\n        <div className=\"App\">\n            <Welcome />\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <header className=\"App-header\">\n                        <h1>UD CIS Scheduler <button onClick={useForceUpdate()}>Update courses</button></h1>\n                    </header>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <Menu />\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                {clear?\n                                    <button className=\"btn btn-light btn-sm\" onClick={()=>clearSemester(fallsemesters,springsemesters)}>Clear all semesters</button>:\n                                    <button className=\"btn btn-light btn-sm\" onClick={()=>setDefault(fallsemesters,springsemesters)}>Set default plan</button>}\n                            </div>\n                        </div>\n                        <button className=\"btn btn-light btn-sm\" onClick={()=>addSemester(fallsemesters,springsemesters,true)}>Add fall semester</button>\n                        <button className=\"btn btn-light btn-sm\" onClick={()=>removeSemester(fallsemesters,springsemesters,true)}>Remove last fall semester</button>\n                        {fallsemesters.map((Courses,i)=>{\n                            return(\n                                <Semester key = {i}\n                                    year={i+1}\n                                    season = {\"Fall\"} \n                                    courses = {Courses}\n                                />);\n                        })}\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <button className=\"btn btn-light btn-sm\">Save plan</button>\n                                <button className=\"btn btn-light btn-sm\">Load plan</button>\n                            </div>\n                        </div>\n                        <button className=\"btn btn-light btn-sm\" onClick={()=>addSemester(fallsemesters,springsemesters,false)}>Add spring semester</button>\n                        <button className=\"btn btn-light btn-sm\" onClick={()=>removeSemester(fallsemesters,springsemesters,false)}>Remove last spring semester</button>\n                        {springsemesters.map((Courses,i)=>{\n                            return(\n                                <Semester key = {i}\n                                    year = {i+1}\n                                    season = {\"Spring\"} \n                                    courses = {Courses}\n                                />);\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}