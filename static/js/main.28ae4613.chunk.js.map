{"version":3,"sources":["Components/Menu.tsx","Components/AddCourseMenu.tsx","Components/EditCourse.tsx","Components/Semester.tsx","Components/Welcome.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Menu","className","COURSES","map","Course","i","name","description","AddCourseMenu","props","trigger","onClick","course","setCourses","courses","setTrigger","EditCourse","editTmpId","editAddCourse","useState","setName","setDescription","credits","setCredits","onSubmit","e","preventDefault","id","type","placeholder","value","onChange","target","parseInt","Semester","popup","setPopup","editDiagram","setEditDiagram","setEditTmpId","year","season","slice","prereqs","length","prereq","includes","push","scope","align","Button","copy1","splice","removeCourse","tmpCourse","filter","res","editCourse","curIndex","curCourse","JSON","parse","stringify","forEach","index","Welcome","show","setShow","ToastContainer","position","Toast","onClose","bg","ToastHeader","Body","App","currentCourses","setCurrentCourses","fallsemesters","setFallSemesters","springsemesters","setSpringSemesters","fsemesters","ssemesters","fcopy","scopy","clearSemester","semesters","addFallSemester","copy","removeFallSemester","addSpringSemester","removeSpringSemester","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28ae4613.chunk.js","sourcesContent":["import React from \"react\";\nimport COURSES from \"../Assets/courses.json\";\n\nexport function Menu(): JSX.Element{\n    return(\n        <div className=\"menu\">\n            <h3>Course list</h3>\n            <h6>Incomplete Requirements</h6>\n            <ul className=\"nav navbar-nav\">\n                {COURSES.map((Course, i) => {\n                    return <li key={i}><strong>{Course.name}</strong> {Course.description}</li>;\n                })}\n            </ul>\n            <hr/>\n            <h6>Complete Requirements</h6>\n            <ul className=\"nav navbar-nav\">\n            </ul>\n        </div>\n    );\n}","import React from \"react\";\nimport COURSES from \"../Assets/courses.json\";\nimport Course from \"../Interfaces/Course\";\n\nexport function AddCourseMenu(props:{trigger:boolean;courses:Course[] ; setTrigger:(arg0:boolean)=>void, setCourses:(arg0:Course[])=>void}): JSX.Element{\n\n    function addCourse(course:Course){\n        props.setCourses([...props.courses,course]);\n        props.setTrigger(false);\n\n    }\n    return props.trigger ?\n        <div className=\"menu\">\n            <h3>Course list</h3>\n            <ul className=\"nav navbar-nav\">\n                {COURSES.map((Course, i) => {\n                    return <li key={i}><strong>{Course.name}</strong> {Course.description} <button onClick={()=>addCourse(Course)}>Add course</button></li>;\n                })}\n            </ul>\n        </div>\n        :<div>\n\n        </div>;\n    \n}\n\n","import React, { useState } from \"react\";\ninterface IProps{\n   editTmpId:number;\n   // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   editAddCourse: (tmpCourse: any) => void\n}\n \nconst EditCourse:React.FC<IProps> = ({editTmpId,editAddCourse}) => {\n    const [name,setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [credits, setCredits] = useState<number>();\n    \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const onSubmit = (e:any) =>{\n        e.preventDefault();\n        const id = editTmpId;\n    \n        editAddCourse({id,name,description,credits}) ;\n    };\n    return (\n        <div >\n            <br/>\n            <form onSubmit={onSubmit} >\n                <p><label><li>Course Name</li></label></p>\n                <input type='text' placeholder='edit course name' value={name} onChange={(e)=>setName(e.target.value)}/>\n                <p></p>\n                <p><label><li>Description</li></label></p>\n                <input type='text' placeholder='edit description' value={description} onChange={(e)=>setDescription(e.target.value)}/>\n                <p></p>\n                <p><label><li>Credit</li></label></p>\n                <input type='number' placeholder='edit credit'value={credits}  onChange={(e)=>setCredits(parseInt(e.target.value))}/>\n    \n                <p><input type=\"submit\" className=\"btn btn-primary m-2\" value=\"Save course\"/></p>\n            </form>\n        </div>\n    );\n};\n \nexport default EditCourse;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Course from \"../Interfaces/Course\";\nimport {AddCourseMenu} from \"./AddCourseMenu\";\nimport COURSES from \"../Assets/courses.json\";\nimport EditCourse from \"./EditCourse\";\n\nexport function Semester(props:{courses:Course[];year:number;season:string;setCurrentCourses:(arg0:Course[])=>void}): JSX.Element{\n    const [popup,setPopup]=useState(false);\n    const [courses,setCourses]=useState(props.courses);\n\n    const [editDiagram, setEditDiagram] = useState(false);\n    const [editTmpId,setEditTmpId] = useState<number>(0);\n\n    function clearSemester(){\n        setCourses([]);\n    }\n    function removeCourse(course:Course){\n        const copy1:Course[]=[...courses];\n        for (let i=0;i<courses.length;i++){\n            if(course.id==courses[i].id){\n                copy1.splice(i,1);\n\n            }\n        }\n        setCourses(copy1);\n    }\n\n    const editCourse = (id:number) => {\n        setEditDiagram(true);\n        const tmpCourse = courses.filter((res)=>{\n            return res.id == id;\n        });\n        setEditTmpId(tmpCourse[0].id);\n    };\n  \n    \n    const editAddCourse=(tmpCourse:Course)=>{\n        let curIndex = 0;\n        const curCourse = JSON.parse(JSON.stringify(courses));\n        courses.forEach((course,index) => {\n            if (course.id == tmpCourse.id) curIndex = index;\n        });\n        curCourse[curIndex] = tmpCourse;\n        setCourses(curCourse);\n        setEditDiagram(false);\n    };\n  \n    const cancelEditDiagram = () => {\n        setEditDiagram(false);\n    };\n \n    return <div className={\"semester\"}>\n        <h5>Year {props.year}   {props.season} Semester</h5>\n        <table>\n            <tr>\n                <td>ID</td>\n                <td>Name</td>\n                <td>Credits</td>\n                <td>Preq for</td>\n            </tr>\n            {courses.slice().map((Course,i)=> {\n                const prereqs:string[]=[];\n                for(let i=0;i<COURSES.length;i++){\n                    if(COURSES[i].prereq!=null){\n                        if(COURSES[i].prereq?.includes(Course.name)){\n                            prereqs.push(COURSES[i].name);\n                        }\n                    }\n                }\n                return (\n                    <tr key={i}>\n                        <td scope=\"col\">{Course.name}</td>\n                        <td scope=\"col\">{Course.description}</td>\n                        <td scope=\"col\">{Course.credits}</td>\n                        <td scope=\"col\">{prereqs.map((i)=>{\n                            return i+\"\\n\";\n                        }\n                        )}</td>\n\n                        <td scope=\"col\" align=\"center\">\n                            <Button id=\"special\" className=\"btn btn-sm\" onClick={()=>removeCourse(Course)}>Remove course</Button>\n                            <Button id=\"special2\" className=\"btn btn-sm\" onClick={()=>editCourse(Course.id)}>Edit course</Button>\n                        </td>\n                    </tr>\n                );\n            })}\n        </table>\n        <Button className=\"btn btn-light btn-sm\" onClick={()=>clearSemester()}>Clear courses</Button>\n        <Button className=\"btn btn-light btn-sm\" onClick={()=>setPopup(true)}>Add course</Button>\n        <AddCourseMenu trigger={popup} setTrigger={setPopup} setCourses={setCourses} courses={courses}></AddCourseMenu>\n\n        {editDiagram?\n            <div className='outer-diagram'>\n                <div className='diagram'>\n                    <EditCourse  editTmpId={editTmpId}  editAddCourse={editAddCourse}/>\n                    <button className='diagram-cancel btn btn-primary' onClick={cancelEditDiagram}>Cancel</button>\n                </div>\n            </div> :\n            <div></div>\n        }\n\n    </div>\n    ;\n}\n","import Toast from \"react-bootstrap/Toast\";\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\nimport ToastHeader from \"react-bootstrap/ToastHeader\";\nimport React, { useState } from \"react\";\n\nexport function Welcome(): JSX.Element{\n    const [show, setShow] = useState(false);\n    return(\n        <div className=\"welcome\">\n            <ToastContainer position=\"top-end\" className=\"p-3\">\n                <Toast show={!show} onClose={()=>setShow(!show)} bg=\"light\">\n                    <ToastHeader>\n                        <strong className=\"me-auto\">Welcome!</strong>\n                    </ToastHeader>\n                    <Toast.Body> \n                        This handy dandy website can help you plan out your computer science degree at the University of Delaware.\n                    </Toast.Body>\n                    <Toast.Body> \n                        <button type=\"button\" className=\"btn btn-dark btn-sm\">Tutorial</button>\n                    </Toast.Body>\n                </Toast>\n            </ToastContainer>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Components/Menu.css\";\nimport COURSES from \"./Assets/courses.json\";\nimport {Menu} from \"./Components/Menu\";\nimport \"./Components/Semester.css\";\nimport { Semester } from \"./Components/Semester\";\nimport \"./Components/Welcome.css\";\nimport { Welcome } from \"./Components/Welcome\";\nimport Course from \"./Interfaces/Course\";\nimport \"./App.css\";\nimport \"./Components/Semester.css\";\nimport \"./Components/Menu.css\";\nfunction App(): JSX.Element {\n    const [currentCourses, setCurrentCourses] = useState([COURSES[0],COURSES[1],COURSES[2],COURSES[3]]as Course[]);\n    const [fallsemesters, setFallSemesters] = useState([1,2,3,4]);\n    const [springsemesters, setSpringSemesters] = useState([1,2,3,4]);\n    function addFallSemester(semesters: number[]){\n        const i: number = semesters.length;\n        setFallSemesters([...semesters,i+1]);\n    }\n    function addSpringSemester(semesters: number[]){\n        const i: number = semesters.length;\n        setSpringSemesters([...semesters,i+1]);\n    }\n    function removeFallSemester(semesters: number[]){\n        const copy: number[] = [...semesters];\n        copy.splice(semesters.length-1,1);\n        setFallSemesters(copy);\n    }\n    function removeSpringSemester(semesters: number[]){\n        const copy: number[] = [...semesters];\n        copy.splice(semesters.length-1,1);\n        setSpringSemesters(copy);\n    }\n    function clearSemester(fsemesters: number[], ssemesters: number[]){\n        const fcopy: number[] = [...fsemesters];\n        const scopy: number[] = [...ssemesters];\n        fcopy.splice(0,fsemesters.length);\n        scopy.splice(0,ssemesters.length);\n        setFallSemesters(fcopy);\n        setSpringSemesters(scopy);\n    }\n    function setDefault(){\n        setFallSemesters([1,2,3,4]);\n        setSpringSemesters([1,2,3,4]);\n    }\n    return (\n        <div className=\"App\">\n            <Welcome />\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <header className=\"App-header\">\n                        <h1>UD CIS Scheduler</h1>\n                    </header>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <Menu />\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <button className=\"btn btn-light btn-sm\" onClick={()=>clearSemester(fallsemesters,springsemesters)}>Clear all semesters</button>\n                            </div>\n                        </div>\n                        <button className=\"btn btn-light btn-sm\" onClick={()=>addFallSemester(fallsemesters)}>Add fall semester</button>\n                        <button className=\"btn btn-light btn-sm\" onClick={()=>removeFallSemester(fallsemesters)}>Remove last fall semester</button>\n                        {fallsemesters.map((i)=>{\n                            return(\n                                <Semester key = {i}\n                                    year = {i}\n                                    season = {\"Fall\"} \n                                    courses = {currentCourses}\n                                    setCurrentCourses={setCurrentCourses}/>);\n                        })}\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <button className=\"btn btn-light btn-sm\" onClick={()=>setDefault()}>Set default plan</button>\n                            </div>\n                        </div>\n                        <button className=\"btn btn-light btn-sm\" onClick={()=>addSpringSemester(springsemesters)}>Add spring semester</button>\n                        <button className=\"btn btn-light btn-sm\" onClick={()=>removeSpringSemester(springsemesters)}>Remove last spring semester</button>\n                        {springsemesters.map((i)=>{\n                            return(\n                                <Semester key = {i}\n                                    year = {i}\n                                    season = {\"Spring\"} \n                                    courses = {currentCourses}\n                                    setCurrentCourses = {setCurrentCourses}/>);\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}