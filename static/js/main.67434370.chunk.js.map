{"version":3,"sources":["Components/Menu.tsx","Components/AddCourseMenu.tsx","Components/EditCourse.tsx","Components/Semester.tsx","Components/Welcome.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Menu","props","useState","name","setName","description","setDescription","credits","setCredits","override","setOverride","overrideCourse","i","courseList","setCourseList","className","id","map","Course","enrolled","onClick","Button","type","placeholder","value","onChange","e","target","parseInt","AddCourseMenu","trigger","setTrigger","course","setCourses","courses","season","year","addCourse","EditCourse","editTmpId","editAddCourse","onSubmit","preventDefault","Semester","popup","setPopup","editDiagram","setEditDiagram","addDiagram","setAddDiagram","setEditTmpId","Table","slice","prereqs","length","prereq","includes","push","scope","align","n","copy1","splice","removeCourse","tmpCourse","filter","res","editCourse","clearSemester","curIndex","curCourse","JSON","parse","stringify","forEach","index","Welcome","show","setShow","ToastContainer","position","Toast","onClose","bg","autohide","ToastHeader","Body","App","COURSES","defaultfall","defaultspring","fallsemesters","setFallSemesters","springsemesters","setSpringSemesters","clear","setClear","addSemester","fsemesters","ssemesters","removeSemester","copy","semester","Courses","semCourses","c","co","csvContent","f","sp","hiddenElement","document","createElement","href","encodeURI","download","click","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"s8MAIO,SAASA,EAAKC,GACjB,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA8BJ,mBAAiB,GAA/C,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA+BN,oBAAS,GAAxC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,SAASC,EAAeC,GACpBX,EAAMY,WAAWD,GAAGT,KAAKA,EACzBF,EAAMY,WAAWD,GAAGP,YAAYA,EAChCJ,EAAMY,WAAWD,GAAGL,QAAQA,EAC5BN,EAAMa,cAAN,YAAwBb,EAAMY,aAElC,OACI,sBAAKE,UAAU,OAAf,UACI,6BAAI,+DACJ,oBAAIC,GAAG,YAAYD,UAAU,iBAA7B,SACKd,EAAMY,WAAWI,KAAI,SAACC,EAAQN,GAC3B,GAAoB,GAAjBM,EAAOC,SACN,OAAO,mCAAcV,EAAU,wBAAQM,UAAU,uBAAuBK,QAAS,kBAAIT,EAAeC,IAArE,sBAA4F,KAApH,IAA2H,iCAASM,EAAOf,OAA3I,IAA2Je,EAAOb,cAAzJO,QAI5B,uBACA,6BAAI,6DACJ,oBAAII,GAAG,YAAYD,UAAU,iBAA7B,SACKd,EAAMY,WAAWI,KAAI,SAACC,EAAQN,GAC3B,GAAoB,GAAjBM,EAAOC,SACN,OAAO,mCAAcV,EAAU,wBAAQM,UAAU,uBAAuBK,QAAS,kBAAIT,EAAeC,IAArE,sBAA4F,KAApH,IAA2H,iCAASM,EAAOf,OAA3I,IAA2Je,EAAOb,cAAzJO,QAI5B,uBACCH,EACG,gCACI,2DAAiC,cAACY,EAAA,EAAD,CAAQL,GAAG,gBAAgBD,UAAU,aAAaK,QAAS,kBAAIV,GAAY,IAA3E,SAAmF,4CACpH,iCACI,qBAAKK,UAAU,aAAf,SACI,uBAAOO,KAAK,OAAOC,YAAY,KAAKC,MAAOrB,EAAMsB,SAAU,SAACC,GAAD,OAAKtB,EAAQsB,EAAEC,OAAOH,YAErF,qBAAKT,UAAU,aAAf,SACI,uBAAOO,KAAK,OAAOC,YAAY,OAAOC,MAAOnB,EAAaoB,SAAU,SAACC,GAAD,OAAKpB,EAAeoB,EAAEC,OAAOH,YAErG,qBAAKT,UAAU,aAAf,SACI,yBAAQA,UAAU,+BAA+BS,MAAOjB,EAASkB,SAAU,SAACC,GAAD,OAAKlB,EAAWoB,SAASF,EAAEC,OAAOH,SAA7G,UACI,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,gDAIZ,iDAAmB,wCAAnB,KAAwC,0CAAxC,SAAmE,6CAAnE,IAA4F,uBAA5F,kBAAgH,8CAAhH,eAAqJ,uBAArJ,0CAEJ,8BACI,cAACH,EAAA,EAAD,CAAQN,UAAU,uBAAuBK,QAAS,kBAAIV,GAAY,IAAlE,kC,kBC3Db,SAASmB,EAAc5B,GAc1B,OAAOA,EAAM6B,QACT,gCACI,uDAA6B,cAACT,EAAA,EAAD,CAAQL,GAAG,gBAAgBD,UAAU,4BAA4BK,QAL9E,WACpBnB,EAAM8B,YAAW,IAIgB,uBAC7B,oBAAIhB,UAAU,iBAAd,SACKd,EAAMY,WAAWI,KAAI,SAACC,EAAQN,GAC3B,GAAGM,EAAOC,SACN,OAAO,+BAAY,cAACE,EAAA,EAAD,CAAQN,UAAU,uBAAuBK,QAAS,kBAnBzF,SAAmBY,EAAcpB,GAC7BX,EAAMgC,WAAN,sBAAqBhC,EAAMiC,SAA3B,CAAmCF,KACnC/B,EAAM8B,YAAW,GACC,QAAd9B,EAAMkC,OACNlC,EAAMY,WAAWD,GAAGO,SAASlB,EAAMmC,KAEnCnC,EAAMY,WAAWD,GAAGO,SAAoB,EAAXlB,EAAMmC,KAEvCnC,EAAMa,cAAN,YAAwBb,EAAMY,aAW2DwB,CAAUnB,EAAON,IAAvE,eAAZ,IAAkG,iCAASM,EAAOf,OAAlH,IAAkIe,EAAOb,YAAzI,MAASO,WAK/B,wBCpBT,IA2Ce0B,EA3CqB,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,UAAUC,EAAmB,EAAnBA,cAC5C,EAAuBtC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA8BJ,mBAAiB,GAA/C,mBAAOK,EAAP,KAAgBC,EAAhB,KAQA,OACI,8BACI,uBAAMiC,SARG,SAACf,GACdA,EAAEgB,iBAGFF,EAAc,CAACxB,GAFJuB,EAEOpC,OAAKE,cAAYE,aAI/B,UACI,sBAAKQ,UAAU,aAAf,UACI,8CACA,uBAAOO,KAAK,OAAOP,UAAU,eAAeQ,YAAY,eAAeC,MAAOrB,EAAMsB,SAAU,SAACC,GAAD,OAAKtB,EAAQsB,EAAEC,OAAOH,aAExH,sBAAKT,UAAU,aAAf,UACI,yCACA,uBAAOO,KAAK,OAAOP,UAAU,eAAeQ,YAAY,mCAAmCC,MAAOnB,EAAaoB,SAAU,SAACC,GAAD,OAAKpB,EAAeoB,EAAEC,OAAOH,aAE1J,sBAAKT,UAAU,aAAf,UACI,4CACA,yBAAQA,UAAU,eAAeS,MAAOjB,EAASkB,SAAU,SAACC,GAAD,OAAKlB,EAAWoB,SAASF,EAAEC,OAAOH,SAA7F,UACI,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,8CAGR,cAACH,EAAA,EAAD,CAAQC,KAAK,SAASN,GAAG,cAAcD,UAAU,aAAjD,wBCxCT,SAAS4B,EAAS1C,GACrB,MAAuBC,oBAAS,GAAhC,mBAAO0C,EAAP,KAAaC,EAAb,KACA,EAA2B3C,mBAASD,EAAMiC,SAA1C,mBAAOA,EAAP,KAAeD,EAAf,KACA,EAAsC/B,oBAAS,GAA/C,mBAAO4C,EAAP,KAAoBC,EAApB,KACA,EAAoC7C,oBAAS,GAA7C,mBAAO8C,EAAP,KAAmBC,EAAnB,KACA,EAAiC/C,mBAAiB,GAAlD,mBAAOqC,EAAP,KAAiBW,EAAjB,KA+CA,OAAO,sBAAKnC,UAAW,WAAhB,UACH,uBACA,uCAAUd,EAAMmC,KAAhB,MAAyBnC,EAAMkC,OAA/B,eACA,qBAAKpB,UAAU,sBAAf,SACI,eAACoC,EAAA,EAAD,CAAOpC,UAAU,iCAAjB,UACI,gCACI,+BACI,6BAAI,0CACJ,6BAAI,4CACJ,6BAAI,+CACJ,6BAAI,gDACJ,4BAGR,gCACKmB,EAAQkB,QAAQnC,KAAI,SAACC,EAAON,GAEzB,IADA,IAAMyC,EAAiB,GACfzC,EAAE,EAAEA,EAAEX,EAAMY,WAAWyC,OAAO1C,IAAI,CACD,IAAD,EAApC,GAA+B,MAA5BX,EAAMY,WAAWD,GAAG2C,QACnB,UAAGtD,EAAMY,WAAWD,GAAG2C,cAAvB,aAAG,EAA4BC,SAAStC,EAAOf,QAC3CkD,EAAQI,KAAKxD,EAAMY,WAAWD,GAAGT,MAI7C,OACI,+BACI,oBAAIuD,MAAM,MAAV,SAAiBxC,EAAOf,OACxB,oBAAIuD,MAAM,MAAV,SAAiBxC,EAAOb,cACxB,oBAAIqD,MAAM,MAAV,SAAiBxC,EAAOX,UACxB,oBAAImD,MAAM,MAAV,SAAiBL,EAAQpC,KAAI,SAACL,GAC1B,OAAOA,EAAE,UAIb,qBAAI8C,MAAM,MAAMC,MAAM,SAAtB,UACI,cAACtC,EAAA,EAAD,CAAQL,GAAG,uBAAuBD,UAAU,aAAaK,QAAS,kBAxElG,SAAsBY,GAGlB,IAFA,IACI4B,EADEC,EAAe,YAAI3B,GAEhBtB,EAAE,EAAEA,EAAEsB,EAAQoB,OAAO1C,IACvBoB,EAAOhB,IAAIkB,EAAQtB,GAAGI,KACrB6C,EAAMC,OAAOlD,EAAE,GACfgD,EAAE5B,EAAOhB,GACTf,EAAMY,WAAW+C,EAAE,GAAGzC,SAAS,GAGvClB,EAAMa,cAAN,YAAwBb,EAAMY,aAC9BoB,EAAW4B,GA6DuFE,CAAa7C,IAAnF,oBACA,cAACG,EAAA,EAAD,CAAQL,GAAG,qBAAqBD,UAAU,aAAaK,QAAS,kBA5D7E,SAACJ,GAChB+B,GAAe,GACf,IAAMiB,EAAY9B,EAAQ+B,QAAO,SAACC,GAC9B,OAAOA,EAAIlD,IAAMA,KAErBkC,EAAac,EAAU,GAAGhD,IAuDsEmD,CAAWjD,EAAOF,KAAtF,uBAXCJ,aAmB7B,cAACS,EAAA,EAAD,CAAQN,UAAU,uBAAuBK,QAAS,kBA1FtD,WAEI,IADA,IAAIwC,EACKhD,EAAE,EAAEA,EAAEsB,EAAQoB,OAAO1C,IAC1BgD,EAAE1B,EAAQtB,GAAGI,GACbf,EAAMY,WAAW+C,EAAE,GAAGzC,SAAS,EAEnClB,EAAMa,cAAN,YAAwBb,EAAMY,aAC9BoB,EAAW,IAmF2CmC,IAAtD,2BACA,cAAC/C,EAAA,EAAD,CAAQN,UAAU,uBAAuBK,QAjDtB,WACnByB,GAAS,GACTI,GAAc,IA+Cd,wBACCD,EACG,8BACI,qBAAKjC,UAAU,cAAf,SACI,cAACc,EAAD,CAAeC,QAASc,EAAOb,WAAYc,EAAUZ,WAAYA,EAAYnB,cAAeb,EAAMa,cAAeD,WAAYZ,EAAMY,WAAYqB,QAASA,EAASE,KAAMnC,EAAMmC,KAAMD,OAAQlC,EAAMkC,aAGzM,KAEHW,EACG,qBAAK/B,UAAU,gBAAf,SACI,sBAAKA,UAAU,UAAf,UACI,cAAC,EAAD,CAAYwB,UAAWA,EAAYC,cA1E/B,SAACwB,GACjB,IAAIK,EAAW,EACTC,EAAYC,KAAKC,MAAMD,KAAKE,UAAUvC,IAC5CA,EAAQwC,SAAQ,SAAC1C,EAAO2C,GAChB3C,EAAOhB,IAAMgD,EAAUhD,KAAIqD,EAAWM,MAE9CL,EAAUD,GAAYL,EACtB/B,EAAWqC,GACXvB,GAAe,MAmEH,cAAC1B,EAAA,EAAD,CAAQL,GAAG,gBAAgBD,UAAU,4BAA4BK,QAjEvD,WACtB2B,GAAe,IAgEH,yBAGR,Q,kCClHL,SAAS6B,IACZ,MAAwB1E,oBAAS,GAAjC,mBAAO2E,EAAP,KAAaC,EAAb,KACA,OACI,qBAAK/D,UAAU,UAAf,SACI,cAACgE,EAAA,EAAD,CAAgBC,SAAS,UAAUjE,UAAU,MAA7C,SACI,eAACkE,EAAA,EAAD,CAAOJ,MAAOA,EAAMK,QAAS,kBAAIJ,GAASD,IAAOM,GAAG,QAAQC,UAAQ,EAApE,UACI,cAACC,EAAA,EAAD,UACI,wBAAQtE,UAAU,UAAlB,wBAEJ,eAACkE,EAAA,EAAMK,KAAP,WACI,mHACA,+BACI,gHACA,yFACA,mFACA,+FCmKbC,MAxKf,WACI,MAAiCrF,mBAASsF,GAA1C,mBAAO3E,EAAP,KAAkBC,EAAlB,KACM2E,EAAuB,CAAC,CAAC5E,EAAW,GAAGA,EAAW,IAAIA,EAAW,IAAIA,EAAW,KAAK,CAACA,EAAW,GAAGA,EAAW,GAAGA,EAAW,IAAIA,EAAW,KAAK,CAACA,EAAW,GAAGA,EAAW,GAAGA,EAAW,IAAIA,EAAW,KAAK,CAACA,EAAW,IAAIA,EAAW,IAAIA,EAAW,IAAIA,EAAW,MACtQ6E,EAAyB,CAAC,CAAC7E,EAAW,GAAGA,EAAW,GAAGA,EAAW,IAAIA,EAAW,KAAK,CAACA,EAAW,GAAGA,EAAW,GAAGA,EAAW,IAAIA,EAAW,KAAK,CAACA,EAAW,GAAGA,EAAW,IAAIA,EAAW,IAAIA,EAAW,KAAK,CAACA,EAAW,IAAIA,EAAW,IAAIA,EAAW,IAAIA,EAAW,MAC9Q,EAAwCX,mBAASuF,GAAjD,mBAAOE,EAAP,KAAsBC,EAAtB,KACA,EAA4C1F,mBAASwF,GAArD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAuB5F,oBAAS,GAAhC,mBAAO6F,EAAP,KAAaC,EAAb,KACA,SAASC,EAAYC,EAAsBC,EAAsBhE,GAClD,QAARA,EACCyD,EAAiB,GAAD,mBAAKM,GAAL,CAAgB,MAEhCJ,EAAmB,GAAD,mBAAKK,GAAL,CAAgB,MAEtCH,GAAS,GAEb,SAASI,EAAeF,EAAsBC,EAAsBhE,GAChE,IAAIyB,EACAyC,EACJ,GAAY,QAARlE,EAAe,CAGf,IAFAkE,EAAK,YAAIH,IACJpC,OAAOoC,EAAW5C,OAAO,EAAE,GAC7B4C,EAAW5C,OAAO,EACjB,IAAI,IAAI1C,EAAE,EAAEA,EAAEsF,EAAWA,EAAW5C,OAAO,GAAGA,OAAO1C,IACjDgD,EAAEsC,EAAWA,EAAW5C,OAAO,GAAG1C,GAAGI,GACrCH,EAAW+C,EAAE,GAAGzC,SAAS,EAGjB,GAAbkF,EAAK/C,QAAgC,GAAnB6C,EAAW7C,QAC5B0C,GAAS,GAEblF,EAAc,YAAID,IAClB+E,EAAiBS,OAChB,CAGD,IAFAA,EAAK,YAAIF,IACJrC,OAAOqC,EAAW7C,OAAO,EAAE,GAC7B6C,EAAW7C,OAAO,EACjB,IAAI,IAAI1C,EAAE,EAAEA,EAAEuF,EAAWA,EAAW7C,OAAO,GAAGA,OAAO1C,IACjDgD,EAAEuC,EAAWA,EAAW7C,OAAO,GAAG1C,GAAGI,GACrCH,EAAW+C,EAAE,GAAGzC,SAAS,EAGX,GAAnB+E,EAAW5C,QAA0B,GAAb+C,EAAK/C,QAC5B0C,GAAS,GAEbF,EAAmBO,GAEvBvF,EAAc,YAAID,IA0CtB,OACI,sBAAKE,UAAU,MAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,kBAAf,UAEI,qBAAKA,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAlB,SACI,sDAIR,sBAAKA,UAAU,MAAf,UAEI,sBAAKA,UAAU,QAAf,UACI,6CACA,cAAC,EAAD,CAAMF,WAAYA,EAAYC,cAAeA,OAGjD,qBAAKC,UAAU,MAAf,SAEI,sBAAKA,UAAU,iBAAiBC,GAAG,iBAAnC,UACI,0CAEA,sBAAKD,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACKgF,EACG,wBAAQhF,UAAU,uBAAuBK,QAAS,kBAnE1F,WACI,IAAI,IAAIR,EAAE,EAAEA,EAAEC,EAAWyC,OAAO1C,IAC5BC,EAAWD,GAAGO,SAAS,EAE3BL,EAAc,YAAID,IAClBmF,GAAS,GACTJ,EAAiB,IACjBE,EAAmB,IA4DuE1B,IAAtD,iCACA,wBAAQrD,UAAU,uBAAuBK,QAAS,kBA1DtFqE,EAAYxE,KAAI,SAACqF,EAAS1F,GACtB0F,EAASrF,KAAI,SAACe,GACVA,EAAOb,SAASP,EAAE,QAG1B8E,EAAczE,KAAI,SAACqF,EAAS1F,GACxB0F,EAASrF,KAAI,SAACe,GACVA,EAAOb,SAAS,GAAGP,EAAE,SAG7BgF,EAAiBH,GACjBK,EAAmBJ,QACnBM,GAAS,IA8C2B,kCAGZ,wBAAQjF,UAAU,uBAAuBK,QAAS,kBAAI6E,EAAYN,EAAcE,EAAgB,SAAhG,+BACCE,EACG,wBAAQhF,UAAU,uBAAuBK,QAAS,kBAAIgF,EAAeT,EAAcE,EAAgB,SAAnG,uCACA,wBAEHF,EAAc1E,KAAI,SAACsF,EAAQ3F,GACxB,OACI,cAAC,EAAD,CACIwB,KAAMxB,EAAE,EACRuB,OAAU,OACVD,QAAWqE,EACX1F,WAAYA,EACZC,cAAeA,GALFF,SAU7B,sBAAKG,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,MAAf,UACI,wBAAQA,UAAU,uBAAlB,uBAEA,wBAAQA,UAAU,uBAAuBK,QApE7E,WACI,SAASoF,EAAWC,GAEhB,OADkBA,EAAExF,KAAI,SAACyF,GAAD,OAAgBA,EAAGvG,KAAO,IAAMuG,EAAGrG,YAAc,IAAMqG,EAAGnG,QAAU,QAIhG,IAAMoG,EAAa,0EAAgGhB,EAAc1E,KAAI,SAAC2F,GAAD,OAAiBJ,EAAWI,GAAK,QAAnJ,gDAA4Nf,EAAgB5E,KAAI,SAAC4F,GAAD,OAAkBL,EAAWK,GAAK,QAE/RC,EAAgBC,SAASC,cAAc,KAC7CF,EAAcG,KAAOC,UAAUP,GAC/BG,EAAcnF,OAAS,SACvBmF,EAAcK,SAAW,eACzBL,EAAcM,SAwDkB,2BAGR,wBAAQrG,UAAU,uBAAuBK,QAAS,kBAAI6E,EAAYN,EAAcE,EAAgB,WAAhG,iCACCE,EACG,wBAAQhF,UAAU,uBAAuBK,QAAS,kBAAIgF,EAAeT,EAAcE,EAAgB,WAAnG,yCACA,wBAEHA,EAAgB5E,KAAI,SAACsF,EAAQ3F,GAC1B,OACI,cAAC,EAAD,CACIwB,KAAQxB,EAAE,EACVuB,OAAU,SACVD,QAAWqE,EACX1F,WAAYA,EACZC,cAAeA,GALFF,wBCxJ1CyG,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJjB,SAASkB,eAAe,SAM5BZ,M","file":"static/js/main.67434370.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Course from \"../Interfaces/Course\";\n\nexport function Menu(props:{courseList:Course[];setCourseList:(arg0:Course[])=>void}): JSX.Element{\n    const [name,setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [credits, setCredits] = useState<number>(3);\n    const [override,setOverride] = useState(false);\n    function overrideCourse(i:number){\n        props.courseList[i].name=name;\n        props.courseList[i].description=description;\n        props.courseList[i].credits=credits;\n        props.setCourseList([...props.courseList]);\n    }\n    return(\n        <div className=\"menu\">\n            <h5><strong>Incomplete Requirements</strong></h5>\n            <ul id=\"menu-list\" className=\"nav navbar-nav\">\n                {props.courseList.map((Course, i) => {\n                    if(Course.enrolled==0){\n                        return <li key={i}> {override? <button className=\"btn btn-light btn-sm\" onClick={()=>overrideCourse(i)}>Override</button>: null } <strong>{Course.name}</strong> {Course.description}</li>;\n                    }\n                })}\n            </ul>\n            <hr/>\n            <h5><strong>Complete Requirements</strong></h5>\n            <ul id=\"menu-list\" className=\"nav navbar-nav\">\n                {props.courseList.map((Course, i) => {\n                    if(Course.enrolled!=0){\n                        return <li key={i}> {override? <button className=\"btn btn-light btn-sm\" onClick={()=>overrideCourse(i)}>Override</button>: null } <strong>{Course.name}</strong> {Course.description}</li>;\n                    }\n                })}\n            </ul>\n            <br/>\n            {override?\n                <div>\n                    <h5>Override course &nbsp;&nbsp; <Button id=\"cancel-button\" className=\"btn btn-sm\" onClick={()=>setOverride(false)}><strong>X</strong></Button></h5>\n                    <form>\n                        <div className=\"form-group\">\n                            <input type='text' placeholder='ID' value={name} onChange={(e)=>setName(e.target.value)}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input type='text' placeholder='Name' value={description} onChange={(e)=>setDescription(e.target.value)}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <select className=\"form-control form-control-sm\" value={credits} onChange={(e)=>setCredits(parseInt(e.target.value))}>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                                <option>6</option>\n                                <option>7</option>\n                                <option>8</option>\n                                <option>9</option>\n                                <option>10</option>\n                            </select>\n                        </div>\n                    </form> \n                    <p>Fill in the new <strong>ID</strong>, <strong>name</strong>, and <strong>credits</strong>.<br/>Then click the <strong>Override</strong> button next<br/>to the course you wish to change.</p>\n                </div> :\n                <div>\n                    <Button className=\"btn btn-light btn-sm\" onClick={()=>setOverride(true)}>Override course</Button>\n                </div>\n            }\n        </div>\n    );\n}","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Course from \"../Interfaces/Course\";\n\nexport function AddCourseMenu(props:{trigger:boolean;courses:Course[];year:number;season:string;courseList:Course[] ; setTrigger:(arg0:boolean)=>void, setCourses:(arg0:Course[])=>void, setCourseList:(arg0:Course[])=>void}): JSX.Element{\n    function addCourse(course:Course,i:number){\n        props.setCourses([...props.courses,course]);\n        props.setTrigger(false);\n        if (props.season==\"Fall\"){\n            props.courseList[i].enrolled=props.year;\n        }else{\n            props.courseList[i].enrolled=props.year*2;\n        }\n        props.setCourseList([...props.courseList]);\n    }\n    const closeAddDiagram = () => {\n        props.setTrigger(false);\n    };\n    return props.trigger ?\n        <div>\n            <h5>Course list &nbsp;&nbsp; <Button id=\"cancel-button\" className='diagram-cancel btn btn-sm' onClick={closeAddDiagram}>Cancel</Button></h5>\n            <ul className=\"nav navbar-nav\">\n                {props.courseList.map((Course, i) => {\n                    if(Course.enrolled){\n                        return <li key={i}><Button className=\"btn btn-light btn-sm\" onClick={()=>addCourse(Course,i)}>+</Button> <strong>{Course.name}</strong> {Course.description} </li>;\n                    }\n                })}\n            </ul>\n        </div>\n        :<div>\n        </div>;  \n}\n\n","import { Button } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport Course from \"../Interfaces/Course\";\n\ninterface IProps{\n   editTmpId:number;\n   editAddCourse: (tmpCourse: Course) => void\n}\n \nconst EditCourse:React.FC<IProps> = ({editTmpId,editAddCourse}) => {\n    const [name,setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [credits, setCredits] = useState<number>(3);\n    \n    const onSubmit = (e:React.FormEvent) =>{\n        e.preventDefault();\n        const id = editTmpId;\n    \n        editAddCourse({id,name,description,credits}) ;\n    };\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <label>Course ID</label>\n                    <input type='text' className=\"form-control\" placeholder='e.g. CISC108' value={name} onChange={(e)=>setName(e.target.value)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Name</label>\n                    <input type='text' className=\"form-control\" placeholder='e.g. Intro to Computer Science I' value={description} onChange={(e)=>setDescription(e.target.value)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Credits</label>\n                    <select className=\"form-control\" value={credits} onChange={(e)=>setCredits(parseInt(e.target.value))}>\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                        <option>4</option>\n                        <option>5</option>\n                        <option>6</option>\n                        <option>7</option>\n                        <option>8</option>\n                        <option>9</option>\n                        <option>10</option>\n                    </select>\n                </div>\n                <Button type=\"submit\" id=\"save-button\" className=\"btn btn-sm\">Save</Button>\n            </form>\n        </div>\n    );\n};\n \nexport default EditCourse;\n","import React, { useState } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport Course from \"../Interfaces/Course\";\nimport {AddCourseMenu} from \"./AddCourseMenu\";\nimport EditCourse from \"./EditCourse\";\n\nexport function Semester(props:{courses:Course[];year:number;season:string,courseList:Course[]; setCourseList:(arg0: Course[])=>void}): JSX.Element{\n    const [popup,setPopup]=useState(false);\n    const [courses,setCourses]=useState(props.courses);\n    const [editDiagram, setEditDiagram] = useState(false);\n    const [addDiagram, setAddDiagram] = useState(false);\n    const [editTmpId,setEditTmpId] = useState<number>(0);\n    function clearSemester(){\n        let n:number;\n        for (let i=0;i<courses.length;i++){\n            n=courses[i].id;\n            props.courseList[n-1].enrolled=0;\n        }\n        props.setCourseList([...props.courseList]);\n        setCourses([]);\n    }\n    function removeCourse(course:Course){\n        const copy1:Course[]=[...courses];\n        let n:number;\n        for (let i=0;i<courses.length;i++){\n            if(course.id==courses[i].id){\n                copy1.splice(i,1);\n                n=course.id;\n                props.courseList[n-1].enrolled=0;\n            }\n        }\n        props.setCourseList([...props.courseList]);\n        setCourses(copy1);\n    }\n    const editCourse = (id:number) => {\n        setEditDiagram(true);\n        const tmpCourse = courses.filter((res)=>{\n            return res.id == id;\n        });\n        setEditTmpId(tmpCourse[0].id);\n    };\n    const editAddCourse=(tmpCourse:Course)=>{\n        let curIndex = 0;\n        const curCourse = JSON.parse(JSON.stringify(courses));\n        courses.forEach((course,index) => {\n            if (course.id == tmpCourse.id) curIndex = index;\n        });\n        curCourse[curIndex] = tmpCourse;\n        setCourses(curCourse);\n        setEditDiagram(false);\n    };\n    const cancelEditDiagram = () => {\n        setEditDiagram(false);\n    };  \n    const openAddDiagram = () => {\n        setPopup(true);\n        setAddDiagram(true);\n    };\n    return <div className={\"semester\"}>\n        <br/>\n        <h5>Year {props.year}   {props.season} Semester</h5>\n        <div className=\"table-responsive-xl\">\n            <Table className=\"table table-striped table-dark\">\n                <thead>\n                    <tr>\n                        <td><strong>ID</strong></td>\n                        <td><strong>Name</strong></td>\n                        <td><strong>Credits</strong></td>\n                        <td><strong>Preq for</strong></td>\n                        <td></td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {courses.slice().map((Course,i)=> {\n                        const prereqs:string[]=[];\n                        for(let i=0;i<props.courseList.length;i++){\n                            if(props.courseList[i].prereq!=null){\n                                if(props.courseList[i].prereq?.includes(Course.name)){\n                                    prereqs.push(props.courseList[i].name);\n                                }\n                            }\n                        }\n                        return (\n                            <tr key={i}>\n                                <td scope=\"col\">{Course.name}</td>\n                                <td scope=\"col\">{Course.description}</td>\n                                <td scope=\"col\">{Course.credits}</td>\n                                <td scope=\"col\">{prereqs.map((i)=>{\n                                    return i+\"\\n\";\n                                }\n                                )}</td>\n\n                                <td scope=\"col\" align=\"center\">\n                                    <Button id=\"remove-course-button\" className=\"btn btn-sm\" onClick={()=>removeCourse(Course)}>Remove</Button>\n                                    <Button id=\"edit-course-button\" className=\"btn btn-sm\" onClick={()=>editCourse(Course.id)}>Edit</Button>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </Table>\n        </div>\n        <Button className=\"btn btn-light btn-sm\" onClick={()=>clearSemester()}>Clear courses</Button>\n        <Button className=\"btn btn-light btn-sm\" onClick={openAddDiagram}>Add course</Button>\n        {addDiagram?\n            <div>\n                <div className=\"course-menu\">\n                    <AddCourseMenu trigger={popup} setTrigger={setPopup} setCourses={setCourses} setCourseList={props.setCourseList} courseList={props.courseList} courses={courses} year={props.year} season={props.season}></AddCourseMenu>\n                </div>\n            </div> : \n            null\n        }  \n        {editDiagram?\n            <div className='outer-diagram'>\n                <div className='diagram'>\n                    <EditCourse editTmpId={editTmpId}  editAddCourse={editAddCourse}/>\n                    <Button id=\"cancel-button\" className='diagram-cancel btn btn-sm' onClick={cancelEditDiagram}>Cancel</Button>\n                </div>\n            </div> :\n            null\n        }\n    </div>\n    ;\n}\n","import Toast from \"react-bootstrap/Toast\";\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\nimport ToastHeader from \"react-bootstrap/ToastHeader\";\nimport React, { useState } from \"react\";\n\nexport function Welcome(): JSX.Element{\n    const [show, setShow] = useState(false);\n    return(\n        <div className=\"welcome\">\n            <ToastContainer position=\"top-end\" className=\"p-3\">\n                <Toast show={!show} onClose={()=>setShow(!show)} bg=\"light\" autohide>\n                    <ToastHeader>\n                        <strong className=\"me-auto\">Welcome!</strong>\n                    </ToastHeader>\n                    <Toast.Body> \n                        <p>This handy dandy website can help you plan out your computer science degree at UD.</p>\n                        <ul>\n                            <li>Add and/or remove semesters using the add and remove fall and spring semester.</li>\n                            <li>Clear all semesters will clear out the entire schedule.</li>\n                            <li>Click Edit to edit course names in the semesters.</li>\n                            <li>Click Remove to remove a course from a semester.</li>\n                        </ul>\n                    </Toast.Body>\n                </Toast>\n            </ToastContainer>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Components/Menu.css\";\nimport COURSES from \"./Assets/courses.json\";\nimport {Menu} from \"./Components/Menu\";\nimport \"./Components/Semester.css\";\nimport { Semester } from \"./Components/Semester\";\nimport \"./Components/Welcome.css\";\nimport { Welcome } from \"./Components/Welcome\";\nimport Course from \"./Interfaces/Course\";\nimport \"./App.css\";\nimport \"./Components/Semester.css\";\nimport \"./Components/Menu.css\";\nfunction App(): JSX.Element {\n    const [courseList,setCourseList]=useState(COURSES as Course[]);\n    const defaultfall:Course[][]=[[courseList[0],courseList[14],courseList[15],courseList[20]],[courseList[3],courseList[4],courseList[19],courseList[34]],[courseList[7],courseList[8],courseList[10],courseList[33]],[courseList[12],courseList[11],courseList[36],courseList[38]]];\n    const defaultspring:Course[][]=[[courseList[1],courseList[2],courseList[21],courseList[40]],[courseList[5],courseList[9],courseList[18],courseList[35]],[courseList[6],courseList[34],courseList[16],courseList[41]],[courseList[13],courseList[43],courseList[42],courseList[45]]];\n    const [fallsemesters, setFallSemesters]=useState(defaultfall);\n    const [springsemesters, setSpringSemesters]=useState(defaultspring);\n    const [clear,setClear]=useState(true);\n    function addSemester(fsemesters:Course[][],ssemesters:Course[][],season:string){\n        if(season==\"fall\"){\n            setFallSemesters([...fsemesters,[]]);\n        }else{\n            setSpringSemesters([...ssemesters,[]]);\n        }\n        setClear(true);\n    }\n    function removeSemester(fsemesters:Course[][],ssemesters:Course[][],season:string){\n        let n:number;\n        let copy:Course[][];\n        if (season==\"fall\"){\n            copy=[...fsemesters];\n            copy.splice(fsemesters.length-1,1);\n            if(fsemesters.length>0){\n                for(let i=0;i<fsemesters[fsemesters.length-1].length;i++){\n                    n=fsemesters[fsemesters.length-1][i].id;\n                    courseList[n-1].enrolled=0;\n                }\n            }\n            if(copy.length==0 && ssemesters.length==0){\n                setClear(false);\n            }\n            setCourseList([...courseList]);\n            setFallSemesters(copy);\n        }else{\n            copy=[...ssemesters];\n            copy.splice(ssemesters.length-1,1);\n            if(ssemesters.length>0){\n                for(let i=0;i<ssemesters[ssemesters.length-1].length;i++){\n                    n=ssemesters[ssemesters.length-1][i].id;\n                    courseList[n-1].enrolled=0;\n                }\n            }\n            if(fsemesters.length==0 && copy.length==0){\n                setClear(false);\n            }\n            setSpringSemesters(copy);\n        }\n        setCourseList([...courseList]);\n    }\n    function clearSemester(){\n        for(let i=0;i<courseList.length;i++){\n            courseList[i].enrolled=0;\n        }\n        setCourseList([...courseList]);\n        setClear(false);\n        setFallSemesters([]);\n        setSpringSemesters([]);\n    }\n    function setDefault(){\n        defaultfall.map((semester,i)=>{\n            semester.map((course)=>{\n                course.enrolled=i+1;\n            });\n        });\n        defaultspring.map((semester,i)=>{\n            semester.map((course)=>{\n                course.enrolled=2*(i+1);\n            });\n        });\n        setFallSemesters(defaultfall);\n        setSpringSemesters(defaultspring);\n        setClear(true);\n    }\n\n    function download(){\n        function semCourses(c: Course[]){\n            const semCourse = c.map((co: Course) => co.name + \",\" + co.description + \",\" + co.credits + \"\\n\");\n            return semCourse;\n        }\n    \n        const csvContent = \"data:text/csv;charset=utf-8,\" + \"\\nFall Semesters: \\n\" + \"Course, \" + \"Name, \" + \"Credits\\n\" + fallsemesters.map((f: Course[]) => semCourses(f) + \"\\n\") + \"\\nSpring Semesters: \\n\" + \"Course, \" + \"Name, \" + \"Credits\\n\" + springsemesters.map((sp: Course[]) => semCourses(sp) +\"\\n\");\n\n        const hiddenElement = document.createElement(\"a\");\n        hiddenElement.href = encodeURI(csvContent);\n        hiddenElement.target = \"_blank\";\n        hiddenElement.download = \"Schedule.csv\";\n        hiddenElement.click();\n    }\n \n    return (\n        <div className=\"App\">\n            <Welcome />\n            <div className=\"container-fluid\">\n                {/* header row */}\n                <div className=\"row\">\n                    <header className=\"App-header\">\n                        <h1>UD CIS Scheduler</h1>\n                    </header>\n                </div>\n                {/* rest of page row */}\n                <div className=\"row\">\n                    {/* menu column */}\n                    <div className=\"col-2\">\n                        <h3>Course list</h3>\n                        <Menu courseList={courseList} setCourseList={setCourseList} />\n                    </div>\n                    {/* rightside of page column */}\n                    <div className=\"col\">\n                        {/* rightside of page row */}\n                        <div className=\"row no-gutters\" id=\"schedule-title\">\n                            <h3>Schedule</h3>\n                            {/* fall sem column */}\n                            <div className=\"col\">\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        {clear?\n                                            <button className=\"btn btn-light btn-sm\" onClick={()=>clearSemester()}>Clear all semesters</button>:\n                                            <button className=\"btn btn-light btn-sm\" onClick={()=>setDefault()}>Set default plan</button>}\n                                    </div>\n                                </div>\n                                <button className=\"btn btn-light btn-sm\" onClick={()=>addSemester(fallsemesters,springsemesters,\"fall\")}>Add fall semester</button>\n                                {clear?\n                                    <button className=\"btn btn-light btn-sm\" onClick={()=>removeSemester(fallsemesters,springsemesters,\"fall\")}>Remove last fall semester</button>:\n                                    <div></div>\n                                }\n                                {fallsemesters.map((Courses,i)=>{\n                                    return(\n                                        <Semester key = {i}\n                                            year={i+1}\n                                            season = {\"Fall\"} \n                                            courses = {Courses}\n                                            courseList={courseList}\n                                            setCourseList={setCourseList}\n                                        />);\n                                })}\n                            </div>\n                            {/* spring sem column */}\n                            <div className=\"col\">\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <button className=\"btn btn-light btn-sm\">Save plan</button>\n                                        {/* <button className=\"btn btn-light btn-sm\">Load plan</button> */}\n                                        <button className=\"btn btn-light btn-sm\" onClick={download}>Download</button>\n                                    </div>\n                                </div>\n                                <button className=\"btn btn-light btn-sm\" onClick={()=>addSemester(fallsemesters,springsemesters,\"spring\")}>Add spring semester</button>\n                                {clear?\n                                    <button className=\"btn btn-light btn-sm\" onClick={()=>removeSemester(fallsemesters,springsemesters,\"spring\")}>Remove last spring semester</button>:\n                                    <div></div>\n                                }\n                                {springsemesters.map((Courses,i)=>{\n                                    return(\n                                        <Semester key = {i}\n                                            year = {i+1}\n                                            season = {\"Spring\"} \n                                            courses = {Courses}\n                                            courseList={courseList}\n                                            setCourseList={setCourseList}\n                                        />);\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}