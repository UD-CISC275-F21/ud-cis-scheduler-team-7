{"version":3,"sources":["Components/Menu.tsx","Components/Welcome.tsx","Components/AddCourseMenu.tsx","Components/EditCourse.tsx","Components/Semester.tsx","Components/Table.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Menu","props","useState","name","setName","description","setDescription","credits","setCredits","override","setOverride","overrideCourse","i","courseList","setCourseList","className","id","map","Course","enrolled","onClick","Button","type","placeholder","value","onChange","e","target","parseInt","Welcome","show","setShow","ToastContainer","position","Toast","onClose","bg","autohide","ToastHeader","Body","AddCourseMenu","trigger","setTrigger","course","setCourses","courses","season","year","addCourse","EditCourse","editTmpId","editAddCourse","onSubmit","preventDefault","Semester","popup","setPopup","editDiagram","setEditDiagram","addDiagram","setAddDiagram","setEditTmpId","Table","slice","prereqs","length","prereq","includes","push","scope","align","n","copy1","splice","removeCourse","tmpCourse","filter","res","editCourse","clearSemester","curIndex","curCourse","JSON","parse","stringify","forEach","index","clear","setClear","fallclear","setFallClear","springclear","setSpringClear","addSemester","fsemesters","ssemesters","setFallSemesters","setSpringSemesters","removeSemester","copy","fclear","sclear","defaultfall","semester","defaultspring","fallsemesters","springsemesters","Courses","semCourses","c","co","csvContent","f","sp","hiddenElement","document","createElement","href","encodeURI","download","click","App","COURSES","nested","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c5a10817.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Course from \"../Interfaces/Course\";\n\nexport function Menu(props:{courseList:Course[];setCourseList:(arg0:Course[])=>void}): JSX.Element{\n    const [name,setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [credits, setCredits] = useState<number>(3);\n    const [override,setOverride] = useState(false);\n    function overrideCourse(i:number){\n        props.courseList[i].name=name;\n        props.courseList[i].description=description;\n        props.courseList[i].credits=credits;\n        props.setCourseList([...props.courseList]);\n    }\n    return(\n        <div className=\"menu\">\n            <h5><strong>Incomplete Requirements</strong></h5>\n            <ul id=\"menu-list\" className=\"nav navbar-nav\">\n                {props.courseList.map((Course, i) => {\n                    if(Course.enrolled==0){\n                        return <li key={i}> {override? <button className=\"btn btn-light btn-sm\" onClick={()=>overrideCourse(i)}>Override</button>: null } <strong>{Course.name}</strong> {Course.description}</li>;\n                    }\n                })}\n            </ul>\n            <hr/>\n            <h5><strong>Complete Requirements</strong></h5>\n            <ul id=\"menu-list\" className=\"nav navbar-nav\">\n                {props.courseList.map((Course, i) => {\n                    if(Course.enrolled!=0){\n                        return <li key={i}> {override? <button className=\"btn btn-light btn-sm\" onClick={()=>overrideCourse(i)}>Override</button>: null } <strong>{Course.name}</strong> {Course.description}</li>;\n                    }\n                })}\n            </ul>\n            <br/>\n            {override?\n                <div>\n                    <h5>Override course &nbsp;&nbsp; <Button id=\"cancel-button\" className=\"btn btn-sm\" onClick={()=>setOverride(false)}><strong>X</strong></Button></h5>\n                    <form>\n                        <div className=\"form-group\">\n                            <input type='text' placeholder='ID' value={name} onChange={(e)=>setName(e.target.value)}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input type='text' placeholder='Name' value={description} onChange={(e)=>setDescription(e.target.value)}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <select className=\"form-control form-control-sm\" value={credits} onChange={(e)=>setCredits(parseInt(e.target.value))}>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                                <option>6</option>\n                                <option>7</option>\n                                <option>8</option>\n                                <option>9</option>\n                                <option>10</option>\n                            </select>\n                        </div>\n                    </form> \n                    <p>Fill in the new <strong>ID</strong>, <strong>name</strong>, and <strong>credits</strong>.<br/>Then click the <strong>Override</strong> button next<br/>to the course you wish to change.</p>\n                </div> :\n                <div>\n                    <Button className=\"btn btn-light btn-sm\" onClick={()=>setOverride(true)}>Override course</Button>\n                </div>\n            }\n        </div>\n    );\n}","import Toast from \"react-bootstrap/Toast\";\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\nimport ToastHeader from \"react-bootstrap/ToastHeader\";\nimport React, { useState } from \"react\";\n\nexport function Welcome(): JSX.Element{\n    const [show, setShow] = useState(false);\n    return(\n        <div className=\"welcome\">\n            <ToastContainer position=\"top-end\" className=\"p-3\">\n                <Toast show={!show} onClose={()=>setShow(!show)} bg=\"light\" autohide>\n                    <ToastHeader>\n                        <strong className=\"me-auto\">Welcome!</strong>\n                    </ToastHeader>\n                    <Toast.Body> \n                        <p>This handy dandy website can help you plan out your computer science degree at UD.</p>\n                        <ul>\n                            <li>Add and/or remove semesters using the add and remove fall and spring semester.</li>\n                            <li>Clear all semesters will clear out the entire schedule.</li>\n                            <li>Click Edit to edit course names in the semesters.</li>\n                            <li>Click Remove to remove a course from a semester.</li>\n                        </ul>\n                    </Toast.Body>\n                </Toast>\n            </ToastContainer>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Course from \"../Interfaces/Course\";\n\nexport function AddCourseMenu(props:{trigger:boolean;courses:Course[];year:number;season:string;courseList:Course[] ; setTrigger:(arg0:boolean)=>void, setCourses:(arg0:Course[])=>void, setCourseList:(arg0:Course[])=>void}): JSX.Element{\n    function addCourse(course:Course,i:number){\n        props.setCourses([...props.courses,course]);\n        props.setTrigger(false);\n        if (props.season==\"Fall\"){\n            props.courseList[i].enrolled=props.year;\n        }else{\n            props.courseList[i].enrolled=props.year*2;\n        }\n        props.setCourseList([...props.courseList]);\n    }\n    const closeAddDiagram = () => {\n        props.setTrigger(false);\n    };\n    return props.trigger ?\n        <div>\n            <h5>Course list &nbsp;&nbsp; <Button id=\"cancel-button\" className='diagram-cancel btn btn-sm' onClick={closeAddDiagram}>Cancel</Button></h5>\n            <ul className=\"nav navbar-nav\">\n                {props.courseList.map((Course, i) => {\n                    if(!Course.enrolled){\n                        return <li key={i}><Button className=\"btn btn-sm\" onClick={()=>addCourse(Course,i)}>Add {Course.name} {Course.description}</Button> </li>;\n                    }\n                })}\n            </ul>\n        </div>\n        :<div>\n        </div>;  \n}\n\n","import { Button } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport Course from \"../Interfaces/Course\";\n\ninterface IProps{\n   editTmpId:number;\n   editAddCourse: (tmpCourse: Course) => void\n}\n \nconst EditCourse:React.FC<IProps> = ({editTmpId,editAddCourse}) => {\n    const [name,setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [credits, setCredits] = useState<number>(3);\n    \n    const onSubmit = (e:React.FormEvent) =>{\n        e.preventDefault();\n        const id = editTmpId;\n    \n        editAddCourse({id,name,description,credits}) ;\n    };\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <label>Course ID</label>\n                    <input type='text' className=\"form-control\" placeholder='e.g. CISC108' value={name} onChange={(e)=>setName(e.target.value)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Name</label>\n                    <input type='text' className=\"form-control\" placeholder='e.g. Intro to Computer Science I' value={description} onChange={(e)=>setDescription(e.target.value)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Credits</label>\n                    <select className=\"form-control\" value={credits} onChange={(e)=>setCredits(parseInt(e.target.value))}>\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                        <option>4</option>\n                        <option>5</option>\n                        <option>6</option>\n                        <option>7</option>\n                        <option>8</option>\n                        <option>9</option>\n                        <option>10</option>\n                    </select>\n                </div>\n                <Button type=\"submit\" id=\"save-button\" className=\"btn btn-sm\">Save</Button>\n            </form>\n        </div>\n    );\n};\n \nexport default EditCourse;\n","import React, { useState } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport Course from \"../Interfaces/Course\";\nimport {AddCourseMenu} from \"./AddCourseMenu\";\nimport EditCourse from \"./EditCourse\";\n\nexport function Semester(props:{courses:Course[];year:number;season:string,courseList:Course[]; setCourseList:(arg0: Course[])=>void}): JSX.Element{\n    const [popup,setPopup]=useState(false);\n    const [courses,setCourses]=useState(props.courses);\n    const [editDiagram, setEditDiagram] = useState(false);\n    const [addDiagram, setAddDiagram] = useState(false);\n    const [editTmpId,setEditTmpId] = useState<number>(0);\n    function clearSemester(){\n        let n:number;\n        for (let i=0;i<courses.length;i++){\n            n=courses[i].id;\n            props.courseList[n-1].enrolled=0;\n        }\n        props.setCourseList([...props.courseList]);\n        setCourses([]);\n    }\n    function removeCourse(course:Course){\n        const copy1:Course[]=[...courses];\n        let n:number;\n        for (let i=0;i<courses.length;i++){\n            if(course.id==courses[i].id){\n                copy1.splice(i,1);\n                n=course.id;\n                props.courseList[n-1].enrolled=0;\n            }\n        }\n        props.setCourseList([...props.courseList]);\n        setCourses(copy1);\n    }\n    const editCourse = (id:number) => {\n        setEditDiagram(true);\n        const tmpCourse = courses.filter((res)=>{\n            return res.id == id;\n        });\n        setEditTmpId(tmpCourse[0].id);\n    };\n    const editAddCourse=(tmpCourse:Course)=>{\n        let curIndex = 0;\n        const curCourse = JSON.parse(JSON.stringify(courses));\n        courses.forEach((course,index) => {\n            if (course.id == tmpCourse.id) curIndex = index;\n        });\n        curCourse[curIndex] = tmpCourse;\n        setCourses(curCourse);\n        setEditDiagram(false);\n    };\n    const cancelEditDiagram = () => {\n        setEditDiagram(false);\n    };  \n    const openAddDiagram = () => {\n        setPopup(true);\n        setAddDiagram(true);\n    };\n    return <div className={\"semester\"}>\n        <br/>\n        <h5>Year {props.year}   {props.season} Semester</h5>\n        <div className=\"table-responsive-xl\">\n            <Table className=\"table table-striped table-dark\">\n                <thead>\n                    <tr>\n                        <td><strong>ID</strong></td>\n                        <td><strong>Name</strong></td>\n                        <td><strong>Credits</strong></td>\n                        <td><strong>Preq for</strong></td>\n                        <td></td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {courses.slice().map((Course,i)=> {\n                        const prereqs:string[]=[];\n                        for(let i=0;i<props.courseList.length;i++){\n                            if(props.courseList[i].prereq!=null){\n                                if(props.courseList[i].prereq?.includes(Course.name)){\n                                    prereqs.push(props.courseList[i].name);\n                                }\n                            }\n                        }\n                        return (\n                            <tr key={i}>\n                                <td scope=\"col\">{Course.name}</td>\n                                <td scope=\"col\">{Course.description}</td>\n                                <td scope=\"col\">{Course.credits}</td>\n                                <td scope=\"col\">{prereqs.map((i)=>{\n                                    return i+\"\\n\";\n                                }\n                                )}</td>\n\n                                <td scope=\"col\" align=\"center\">\n                                    <Button id=\"remove-course-button\" className=\"btn btn-sm\" onClick={()=>removeCourse(Course)}>Remove</Button>\n                                    <Button id=\"edit-course-button\" className=\"btn btn-sm\" onClick={()=>editCourse(Course.id)}>Edit</Button>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </Table>\n        </div>\n        <Button className=\"btn btn-light btn-sm\" onClick={()=>clearSemester()}>Clear courses</Button>\n        <Button className=\"btn btn-light btn-sm\" onClick={openAddDiagram}>Add course</Button>\n        {addDiagram?\n            <div>\n                <div className=\"course-menu\">\n                    <AddCourseMenu trigger={popup} setTrigger={setPopup} setCourses={setCourses} setCourseList={props.setCourseList} courseList={props.courseList} courses={courses} year={props.year} season={props.season}></AddCourseMenu>\n                </div>\n            </div> : \n            null\n        }  \n        {editDiagram?\n            <div className='outer-diagram'>\n                <div className='diagram'>\n                    <EditCourse editTmpId={editTmpId}  editAddCourse={editAddCourse}/>\n                    <Button id=\"cancel-button\" className='diagram-cancel btn btn-sm' onClick={cancelEditDiagram}>Cancel</Button>\n                </div>\n            </div> :\n            null\n        }\n    </div>\n    ;\n}\n","import React,{useState } from \"react\";\nimport Course from \"../Interfaces/Course\";\nimport { Semester } from \"./Semester\";\n\nexport function Table(props:{fallsemesters:Course[][];springsemesters:Course[][];courseList:Course[];defaultfall:Course[][];defaultspring:Course[][];setCourseList:(arg0:Course[])=>void,setFallSemesters:(arg0:Course[][])=>void,setSpringSemesters:(arg0:Course[][])=>void}):JSX.Element{\n    const [clear,setClear]=useState(true);\n    const [fallclear,setFallClear]=useState(true);\n    const [springclear,setSpringClear]=useState(true);\n    function addSemester(fsemesters:Course[][],ssemesters:Course[][],season:string){\n        if(season==\"fall\"){\n            props.setFallSemesters([...fsemesters,[]]);\n            setFallClear(true);\n        }else{\n            props.setSpringSemesters([...ssemesters,[]]);\n            setSpringClear(true);\n        }\n        setClear(true);\n    }\n    function removeSemester(fsemesters:Course[][],ssemesters:Course[][],season:string){\n        let n:number;\n        let copy:Course[][];\n        let fclear=fallclear;\n        let sclear=springclear;\n        if (season==\"fall\"){\n            copy=[...fsemesters];\n            copy.splice(fsemesters.length-1,1);\n            if(fsemesters.length>0){\n                for(let i=0;i<fsemesters[fsemesters.length-1].length;i++){\n                    n=fsemesters[fsemesters.length-1][i].id;\n                    props.courseList[n-1].enrolled=0;\n                }\n            }\n            if(copy.length==0){\n                fclear=false;\n                setFallClear(false);\n                \n            }\n            props.setCourseList([...props.courseList]);\n            props.setFallSemesters(copy);\n        }else{\n            copy=[...ssemesters];\n            copy.splice(ssemesters.length-1,1);\n            if(ssemesters.length>0){\n                for(let i=0;i<ssemesters[ssemesters.length-1].length;i++){\n                    n=ssemesters[ssemesters.length-1][i].id;\n                    props.courseList[n-1].enrolled=0;\n                }\n            }\n            if(copy.length==0){\n                sclear=false;\n                setSpringClear(false);\n            }\n            props.setSpringSemesters(copy);\n        }\n        if(sclear==false&&fclear==false){\n            setClear(false);\n        }\n        props.setCourseList([...props.courseList]);\n    }\n    function clearSemester(){\n        for(let i=0;i<props.courseList.length;i++){\n            props.courseList[i].enrolled=0;\n        }\n        props.setCourseList([...props.courseList]);\n        setFallClear(false);\n        setSpringClear(false);\n        setClear(false);\n        props.setFallSemesters([]);\n        props.setSpringSemesters([]);\n    }\n    function setDefault(){\n        props.defaultfall.map((semester,i)=>{\n            semester.map((course)=>{\n                course.enrolled=i+1;\n            });\n        });\n        props.defaultspring.map((semester,i)=>{\n            semester.map((course)=>{\n                course.enrolled=2*(i+1);\n            });\n        });\n        props.setFallSemesters(props.defaultfall);\n        props.setSpringSemesters(props.defaultspring);\n        setClear(true);\n        setFallClear(true);\n        setSpringClear(true);\n    }\n    function download(){\n        function semCourses(c: Course[]){\n            const semCourse = c.map((co: Course) => co.name + \",\" + co.description + \",\" + co.credits + \"\\n\");\n            return semCourse;\n        }\n    \n        const csvContent = \"data:text/csv;charset=utf-8,\" + \"Fall Semesters: \\n\" + \"Course, \" + \"Name, \" + \"Credits\\n\" + props.fallsemesters.map((f: Course[]) => semCourses(f) + \"\\n\") + \"\\nSpring Semesters: \\n\" + \"Course, \" + \"Name, \" + \"Credits\\n\" + props.springsemesters.map((sp: Course[]) => semCourses(sp) +\"\\n\");\n\n        const hiddenElement = document.createElement(\"a\");\n        hiddenElement.href = encodeURI(csvContent);\n        hiddenElement.target = \"_blank\";\n        hiddenElement.download = \"Schedule.csv\";\n        hiddenElement.click();\n    }\n    return <div className=\"col\">\n        {/* rightside of page row */}\n        <div className=\"row no-gutters\" id=\"schedule-title\">\n            <h3>Schedule</h3>\n            {/* fall sem column */}\n            <div className=\"col\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        {clear?\n                            <button className=\"btn btn-light btn-sm\" onClick={()=>clearSemester()}>Clear all semesters</button>:\n                            <button className=\"btn btn-light btn-sm\" onClick={()=>setDefault()}>Set default plan</button>}\n                    </div>\n                </div>\n                <button className=\"btn btn-light btn-sm\" onClick={()=>addSemester(props.fallsemesters,props.springsemesters,\"fall\")}>Add fall semester</button>\n                {fallclear?\n                    <button className=\"btn btn-light btn-sm\" onClick={()=>removeSemester(props.fallsemesters,props.springsemesters,\"fall\")}>Remove last fall semester</button>:\n                    <div></div>\n                }\n                {props.fallsemesters.map((Courses,i)=>{\n                    return(\n                        <Semester key = {i}\n                            year={i+1}\n                            season = {\"Fall\"} \n                            courses = {Courses}\n                            courseList={props.courseList}\n                            setCourseList={props.setCourseList}\n                        />);\n                })}\n            </div>\n            {/* spring sem column */}\n            <div className=\"col\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <button className=\"btn btn-light btn-sm\">Save plan</button>\n                        <button onClick={download}className=\"btn btn-light btn-sm\">Download as .CSV</button>\n                    </div>\n                </div>\n                <button className=\"btn btn-light btn-sm\" onClick={()=>addSemester(props.fallsemesters,props.springsemesters,\"spring\")}>Add spring semester</button>\n                {springclear?\n                    <button className=\"btn btn-light btn-sm\" onClick={()=>removeSemester(props.fallsemesters,props.springsemesters,\"spring\")}>Remove last spring semester</button>:\n                    null\n                }\n                {props.springsemesters.map((Courses,i)=>{\n                    return(\n                        <Semester key = {i}\n                            year = {i+1}\n                            season = {\"Spring\"} \n                            courses = {Courses}\n                            courseList={props.courseList}\n                            setCourseList={props.setCourseList}\n                        />);\n                })}\n            </div>\n        </div>\n    </div>;\n}","import React from \"react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Components/Menu.css\";\nimport COURSES from \"./Assets/courses.json\";\nimport {Menu} from \"./Components/Menu\";\nimport \"./Components/Semester.css\";\nimport \"./Components/Welcome.css\";\nimport { Welcome } from \"./Components/Welcome\";\nimport Course from \"./Interfaces/Course\";\nimport \"./App.css\";\nimport \"./Components/Semester.css\";\nimport \"./Components/Menu.css\";\nimport { Table } from \"./Components/Table\";\nfunction App(): JSX.Element {\n    const [courseList,setCourseList]=useState(COURSES as Course[]);\n    const defaultfallids:number[][]=[[0,14,15,20],[3,4,19,34],[7,8,10,33],[12,11,36,8]];\n    const defaultspringids:number[][]=[[1,2,21,40],[5,9,18,35],[6,34,16,41],[13,43,42,45]];\n    const defaultfall:Course[][]=[[],[],[],[]];\n    const defaultspring:Course[][]=[[],[],[],[]];\n    defaultfallids.map((nested,i)=>nested.map((n,c)=>{\n        defaultfall[i][c]=courseList[n];\n    }));\n    defaultspringids.map((nested,i)=>nested.map((n,c)=>{\n        defaultspring[i][c]=courseList[n];\n    }));\n    const [fallsemesters, setFallSemesters]=useState(defaultfall);\n    const [springsemesters, setSpringSemesters]=useState(defaultspring);\n    return (\n        <div className=\"App\">\n            <Welcome />\n            <div className=\"container-fluid\">\n                {/* header row */}\n                <div className=\"row\">\n                    <header className=\"App-header\">\n                        <h1>UD CIS Scheduler</h1>\n                    </header>\n                </div>\n                {/* rest of page row */}\n                <div className=\"row\">\n                    {/* menu column */}\n                    <div className=\"col-2\">\n                        <h3>Course list</h3>\n                        <Menu courseList={courseList} setCourseList={setCourseList} />\n                    </div>\n                    {/* rightside of page column */}\n                    <Table fallsemesters={fallsemesters}\n                        springsemesters={springsemesters}\n                        courseList={courseList}\n                        defaultfall={defaultfall}\n                        defaultspring={defaultspring}\n                        setCourseList={setCourseList}\n                        setFallSemesters={setFallSemesters}\n                        setSpringSemesters={setSpringSemesters}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}